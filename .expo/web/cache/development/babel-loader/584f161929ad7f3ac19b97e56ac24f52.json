{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport { mnemonicToSeed, createAccount, savePublicKey, saveMmemonic } from \"../../api\";\nimport LottieView from 'lottie-react-native';\nimport * as Animatable from 'react-native-animatable';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar windowWidth = Dimensions.get('screen').width;\nvar windowHeight = Dimensions.get('screen').height;\n\nvar ImportarCuenta = function ImportarCuenta(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      twelfString = _useState2[0],\n      setTwelfString = _useState2[1];\n\n  function crearCuenta(twelf) {\n    var docePalabras;\n    return _regeneratorRuntime.async(function crearCuenta$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            docePalabras = mnemonicToSeed(twelf);\n            docePalabras.then(function (value) {\n              var acc = createAccount(value);\n              acc.then(function (value) {\n                navigation.navigate('PantallaCarga');\n                savePublicKey(value.publicKey.toString());\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      anmt = _useState4[0],\n      setanmt = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      vacioModal = _useState6[0],\n      setVacioModal = _useState6[1];\n\n  function continuar() {\n    if (twelfString != \"\") {\n      saveMmemonic(twelfString);\n      navigation.navigate('PantallaCarga');\n    } else {\n      setVacioModal(true);\n      setanmt(\"fadeInDownBig\");\n      setTimeout(function () {\n        setanmt(\"fadeOutUp\");\n        setTimeout(function () {\n          setVacioModal(false);\n        }, 100);\n      }, 2000);\n    }\n  }\n\n  return React.createElement(KeyboardAwareScrollView, {\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    contentContainerStyle: styles.body,\n    scrollEnabled: false\n  }, React.createElement(Modal, {\n    visible: vacioModal,\n    transparent: true,\n    onRequestClose: function onRequestClose() {\n      return setVacioModal(false);\n    },\n    hardwareAccelerated: true\n  }, React.createElement(Animatable.View, {\n    animation: anmt,\n    duration: 600\n  }, React.createElement(View, {\n    style: styles.bodymodal\n  }, React.createElement(View, {\n    style: styles.ventanamodal\n  }, React.createElement(View, {\n    style: styles.icontext\n  }, React.createElement(View, {\n    style: styles.contenedorlottie\n  }, React.createElement(LottieView, {\n    style: styles.lottie,\n    source: require(\"./Lottie/error.json\"),\n    autoPlay: true\n  }))), React.createElement(View, {\n    style: styles.textnoti\n  }, React.createElement(View, {\n    style: styles.contenedortext\n  }, React.createElement(Text, {\n    style: styles.texticon\n  }, \"Error\")), React.createElement(View, null, React.createElement(Text, {\n    style: styles.notificacion\n  }, \"No has ingresado las 12 palabras\"))))))), React.createElement(View, {\n    style: styles.containeruno\n  }, React.createElement(Image, {\n    source: require(\"./img/logocolor.png\"),\n    style: styles.logo\n  })), React.createElement(View, {\n    style: styles.containerBlanco\n  }, React.createElement(Text, {\n    style: styles.textuno,\n    numberOfLines: 2\n  }, \"IMPORTAR CUENTA\"), React.createElement(TextInput, {\n    style: styles.TextInputf,\n    autoFocus: true,\n    multiline: true,\n    onChangeText: function onChangeText(text) {\n      return setTwelfString(text);\n    },\n    autoCapitalize: \"none\"\n  }), React.createElement(Text, {\n    style: styles.labeluno,\n    numberOfLines: 4\n  }, \"Ingrese sus 12 palabras de respaldo en minusculas\"), React.createElement(TouchableOpacity, {\n    style: styles.btnC,\n    onPress: function onPress() {\n      return continuar();\n    }\n  }, React.createElement(Text, {\n    style: styles.textC\n  }, \"ACEPTAR\"))));\n};\n\nvar alturaios = Platform.OS === 'ios' ? '11%' : '2%';\nvar paddinrightios = Platform.OS === 'ios' ? 15 : 12;\nvar aceptartios = Platform.OS === 'ios' ? 15 : 5;\nvar styles = StyleSheet.create({\n  body: {\n    height: windowHeight,\n    width: windowWidth\n  },\n  containeruno: {\n    paddingTop: RFValue(35),\n    alignItems: 'center'\n  },\n  logo: {\n    resizeMode: 'contain',\n    width: windowWidth * 0.5,\n    height: windowHeight * 0.2\n  },\n  containerBlanco: {\n    paddingLeft: RFValue(15),\n    paddingRight: RFValue(paddinrightios),\n    marginTop: RFValue(12),\n    alignItems: 'center',\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    height: windowHeight * 0.8,\n    width: windowWidth,\n    backgroundColor: 'white',\n    elevation: 24,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5\n  },\n  textuno: {\n    marginTop: RFValue(20),\n    fontSize: RFValue(16),\n    fontWeight: 'bold',\n    color: '#616161'\n  },\n  TextInputf: {\n    margin: RFValue(15),\n    width: RFValue(300),\n    height: RFValue(200),\n    borderWidth: 0.8,\n    borderColor: 'purple',\n    borderRadius: 20,\n    padding: RFValue(25),\n    textAlign: 'center'\n  },\n  labeluno: {\n    margin: RFValue(8),\n    fontSize: RFValue(15),\n    marginRight: RFValue(20),\n    marginLeft: RFValue(20),\n    textAlign: 'justify',\n    color: '#b1b1b1'\n  },\n  btnC: {\n    backgroundColor: '#5b298a',\n    alignItems: 'center',\n    paddingLeft: RFValue(80),\n    paddingRight: RFValue(80),\n    paddingTop: RFValue(12),\n    paddingBottom: RFValue(12),\n    borderRadius: 20,\n    marginTop: RFValue(aceptartios),\n    elevation: 24,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 8\n  },\n  textC: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: RFValue(11.5)\n  },\n  bodymodal: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  ventanamodal: {\n    width: windowWidth * 0.95,\n    height: windowHeight * 0.1,\n    backgroundColor: '#5B298A',\n    borderWidth: 0.5,\n    borderColor: 'black',\n    borderRadius: 20,\n    paddingLeft: RFValue(12),\n    paddingRight: RFValue(12),\n    flexDirection: 'row',\n    alignItems: 'center',\n    top: alturaios\n  },\n  icontext: {\n    alignItems: 'center'\n  },\n  textnoti: {},\n  contenedorlottie: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  lottie: {\n    width: 60,\n    height: 60\n  },\n  contenedortext: {\n    justifyContent: 'center'\n  },\n  texticon: {\n    fontSize: RFValue(18),\n    fontWeight: \"bold\",\n    color: 'white'\n  },\n  notificacion: {\n    fontSize: RFValue(12),\n    color: 'white'\n  }\n});\nexport default ImportarCuenta;","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/src/screens/Importarcuenta.tsx"],"names":["React","useState","KeyboardAwareScrollView","RFValue","mnemonicToSeed","createAccount","savePublicKey","saveMmemonic","LottieView","Animatable","windowWidth","Dimensions","get","width","windowHeight","height","ImportarCuenta","navigation","twelfString","setTwelfString","crearCuenta","twelf","docePalabras","then","value","acc","navigate","publicKey","toString","anmt","setanmt","vacioModal","setVacioModal","continuar","setTimeout","x","y","styles","body","bodymodal","ventanamodal","icontext","contenedorlottie","lottie","require","textnoti","contenedortext","texticon","notificacion","containeruno","logo","containerBlanco","textuno","TextInputf","text","labeluno","btnC","textC","alturaios","Platform","OS","paddinrightios","aceptartios","StyleSheet","create","paddingTop","alignItems","resizeMode","paddingLeft","paddingRight","marginTop","borderTopLeftRadius","borderTopRightRadius","backgroundColor","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fontSize","fontWeight","color","margin","borderWidth","borderColor","borderRadius","padding","textAlign","marginRight","marginLeft","paddingBottom","flex","flexDirection","top","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { useState } from 'react'\r\nimport { KeyboardAvoidingView,StyleSheet, Text, View, TouchableOpacity, Image, TextInput, Button, Alert, Modal, Platform } from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\nimport { readKey, generateMnemonic, mnemonicToSeed, createAccount, getBalance, getToken,sendTokenTransaction, savePublicKey, saveMmemonic } from '../../api';\r\nimport LottieView from 'lottie-react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\n//Navegación\r\nimport { Dimensions } from 'react-native';\r\nconst windowWidth = Dimensions.get('screen').width;\r\nconst windowHeight = Dimensions.get('screen').height;\r\nconst ImportarCuenta = ({navigation}: {navigation: any}) => {\r\n\r\n    const [twelfString, setTwelfString] = useState('')\r\n\r\n    async function crearCuenta(twelf: string) {\r\n        const docePalabras = mnemonicToSeed(twelf)\r\n        docePalabras.then((value) => {\r\n            const acc = createAccount(value)\r\n            acc.then((value) => {\r\n                navigation.navigate('PantallaCarga')\r\n                savePublicKey(value.publicKey.toString())\r\n            })\r\n        })\r\n    }\r\n\r\n    const [anmt,setanmt]= useState(\"\");\r\n    const [vacioModal, setVacioModal] = useState(false);\r\n\r\n    function continuar() {\r\n        if (twelfString != \"\") {\r\n            saveMmemonic(twelfString)\r\n            navigation.navigate('PantallaCarga')\r\n        } else {\r\n            setVacioModal(true);\r\n            setanmt(\"fadeInDownBig\");            \r\n            setTimeout( () => {\r\n                setanmt(\"fadeOutUp\");\r\n                setTimeout( () => {\r\n                    setVacioModal(false);\r\n                }, 100 ) \r\n            },2000)\r\n        }\r\n    }\r\n\r\n \r\n    \r\n    return (\r\n        <KeyboardAwareScrollView\r\n            resetScrollToCoords={{ x: 0, y: 0 }}\r\n            contentContainerStyle={styles.body}\r\n            scrollEnabled={false} >\r\n            <Modal\r\n                visible={vacioModal}\r\n                transparent\r\n                onRequestClose={() =>\r\n                    setVacioModal(false)\r\n                }\r\n                // animationType='slide'\r\n                hardwareAccelerated\r\n                \r\n            >\r\n                <Animatable.View animation={anmt} duration= {600}>\r\n                    \r\n                    <View style={styles.bodymodal}>\r\n                        <View style={styles.ventanamodal}>\r\n                            <View style={styles.icontext}>\r\n                                <View style={styles.contenedorlottie}>\r\n                                    <LottieView\r\n                                        style={styles.lottie}\r\n                                        source={require(\"./Lottie/error.json\")}\r\n                                        autoPlay\r\n                                    />\r\n                                </View>\r\n                                \r\n                                \r\n                            </View>   \r\n                            <View style={styles.textnoti}>\r\n                                <View style={styles.contenedortext}>\r\n                                        <Text style={styles.texticon}>Error</Text>\r\n                                </View>\r\n                                <View>\r\n                                    <Text style={styles.notificacion}>No has ingresado las 12 palabras</Text>\r\n                                </View>\r\n                            </View>               \r\n                            \r\n\r\n                        </View>\r\n                \r\n                    </View>\r\n                </Animatable.View>         \r\n            </Modal>\r\n\r\n\r\n\r\n\r\n\r\n            <View style={styles.containeruno}>\r\n                <Image source={require('./img/logocolor.png')} style={styles.logo} />\r\n            </View>\r\n            <View style={styles.containerBlanco}>\r\n                <Text style={styles.textuno} numberOfLines={2}>IMPORTAR CUENTA</Text>\r\n                <TextInput \r\n                    style={styles.TextInputf}\r\n                    autoFocus={true} multiline={true}\r\n                    onChangeText={text => setTwelfString(text)}\r\n                    autoCapitalize = 'none'>\r\n                </TextInput>                \r\n                <Text style={styles.labeluno} numberOfLines={4}>Ingrese sus 12 palabras de respaldo en minusculas</Text>\r\n                <TouchableOpacity\r\n                    style={styles.btnC}\r\n                    onPress={() => continuar()}>\r\n                    <Text style={styles.textC}>ACEPTAR</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}\r\n\r\nconst alturaios = Platform.OS === 'ios' ? '11%' : '2%';\r\nconst paddinrightios = Platform.OS === 'ios' ? 15 : 12;\r\nconst aceptartios = Platform.OS === 'ios' ? 15 : 5;\r\nconst styles = StyleSheet.create({\r\n  \r\n    body: {\r\n        height: windowHeight,\r\n        width: windowWidth,\r\n    },\r\n    containeruno: {\r\n        paddingTop: RFValue(35),\r\n        alignItems:'center',\r\n    },\r\n    logo: {\r\n        resizeMode: 'contain',\r\n        width: windowWidth*0.5,\r\n        height: windowHeight*0.2\r\n    },\r\n    containerBlanco: {\r\n        paddingLeft: RFValue(15),\r\n        paddingRight: RFValue(paddinrightios),\r\n        marginTop: RFValue(12),\r\n        alignItems: 'center',\r\n        borderTopLeftRadius: 25,\r\n        borderTopRightRadius: 25,\r\n        height: windowHeight*0.8,\r\n        width: windowWidth,\r\n        backgroundColor: 'white',\r\n        elevation:24,\r\n        shadowColor: '#000',\r\n        shadowOffset: {width: 0, height: 0},\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 5,    \r\n    },\r\n    textuno: {\r\n        marginTop:RFValue(20),\r\n        fontSize:RFValue(16),\r\n        fontWeight: 'bold',\r\n        color: '#616161'\r\n    },\r\n    TextInputf: {\r\n        margin: RFValue(15),\r\n        width: RFValue(300),\r\n        height: RFValue(200),\r\n        borderWidth: 0.8,\r\n        borderColor: 'purple',\r\n        borderRadius: 20,\r\n        padding: RFValue(25),\r\n        textAlign: 'center'        \r\n    },\r\n    labeluno: {\r\n        margin: RFValue(8),\r\n        fontSize: RFValue(15),\r\n        marginRight: RFValue(20),\r\n        marginLeft: RFValue(20),\r\n        textAlign: 'justify',\r\n        color: '#b1b1b1',\r\n    },\r\n    btnC:{\r\n        backgroundColor:'#5b298a',\r\n        alignItems:'center',\r\n        paddingLeft: RFValue(80),\r\n        paddingRight: RFValue(80),\r\n        paddingTop: RFValue(12),\r\n        paddingBottom: RFValue(12),\r\n        borderRadius: 20,\r\n        marginTop: RFValue(aceptartios),\r\n        elevation:24,\r\n        shadowColor: '#000',\r\n        shadowOffset: {width: 0, height: 0},\r\n        shadowOpacity: 0.5,\r\n        shadowRadius: 8,\r\n    },\r\n    textC:{\r\n        color:'white',\r\n        fontWeight: 'bold',\r\n        fontSize:RFValue(11.5),\r\n    },\r\n\r\n\r\n    //Modal\r\n    bodymodal: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    ventanamodal: {\r\n        width: windowWidth*0.95,\r\n        height: windowHeight*0.1,\r\n        backgroundColor: '#5B298A',\r\n        borderWidth: 0.5,\r\n        borderColor: 'black',\r\n        borderRadius: 20,\r\n        paddingLeft:RFValue(12),\r\n        paddingRight:RFValue(12),\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        top:alturaios\r\n    },\r\n    icontext: {\r\n        alignItems: 'center',\r\n    },\r\n    textnoti: {\r\n\r\n    },\r\n    contenedorlottie:{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    lottie: {\r\n        width:60,\r\n        height:60,\r\n    },\r\n    contenedortext: {\r\n        justifyContent: 'center',\r\n    },\r\n    texticon: {\r\n        fontSize:RFValue(18),\r\n        fontWeight: \"bold\",\r\n        color:'white'\r\n    },\r\n    notificacion:{\r\n        fontSize:RFValue(12),\r\n        color:'white'\r\n    },\r\n})\r\nexport default ImportarCuenta"]},"metadata":{},"sourceType":"module"}