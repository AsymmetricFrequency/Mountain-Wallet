{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport \"react-native-url-polyfill/auto\";\nimport { readPassword } from \"./api\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator, CardStyleInterpolators } from \"@react-navigation/stack\";\nimport Balance from \"./src/screens/Balance\";\nimport Crearcuenta from \"./src/screens/Crearcuenta\";\nimport Home from \"./src/screens/Home\";\nimport Recibir from \"./src/screens/Recibir\";\nimport Splashc from \"./src/screens/Splashc\";\nimport QrReader from \"./src/screens/QrReader\";\nimport PantallaCarga from \"./src/screens/PantallaCarga\";\nimport Ajustes from \"./src/screens/Ajustes\";\nimport Slider from \"./src/screens/Slider\";\nimport Moneda from \"./src/screens/Moneda\";\nimport { Contraseña } from \"./src/screens/Contrase\\xF1a\";\nimport DocePalabras from \"./src/screens/DocePalabras\";\nimport { ConfirContra } from \"./src/screens/ConfirContra\";\nimport { PassLogin } from \"./src/screens/PassLogin\";\nimport Editar from \"./src/screens/Edituser\";\nimport Exclave from \"./src/screens/Exclave\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport EnviarCantidad from \"./src/screens/EnviarCantidad\";\nimport EnviarDireccion from \"./src/screens/EnviarDireccion\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport { useTheme } from \"react-native-paper\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport Restaurar from \"./src/screens/Restaurar\";\nimport ExFrase from \"./src/screens/ExFrase\";\nvar Tab = createBottomTabNavigator();\n\nvar darkTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 2,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: \"#8B39CD\",\n    text: \"#E2DBEE\",\n    background: \"#440577\",\n    accent: \"#FBF7FF\",\n    surface: \"#00FFFF\",\n    disabled: \"#FBF7FF\"\n  })\n});\n\nvar lightTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 2,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: \"#440577\",\n    text: \"#440577\",\n    background: \"#FBF7FF\",\n    accent: \"#4D4D4D\",\n    surface: \"#E2DBEE\",\n    disabled: \"#4D4D4D\"\n  })\n});\n\nvar barios = Platform.OS === \"ios\" ? 65 : 54;\n\nfunction Barra() {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState = useState(Appearance.getColorScheme()),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  Appearance.addChangeListener(function (scheme) {\n    setTheme(scheme.colorScheme);\n  });\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          height: RFValue(barios),\n          backgroundColor: colors.background,\n          borderTopColor: colors.background,\n          elevation: 0\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          var imagenes;\n\n          if (route.name === \"Balance\") {\n            imagenes = focused ? theme == \"dark\" ? require(\"./src/screens/img/walletcolorDark.png\") : require(\"./src/screens/img/walletcolor.png\") : require(\"./src/screens/img/walletblanco.png\");\n          } else if (route.name === \"Ajustes\") {\n            imagenes = focused ? theme == \"dark\" ? require(\"./src/screens/img/settingscolorDark.png\") : require(\"./src/screens/img/settingscolor.png\") : require(\"./src/screens/img/settingsblanco.png\");\n          }\n\n          return React.createElement(Image, {\n            source: imagenes,\n            style: {\n              height: RFValue(34.4),\n              width: RFValue(33.3),\n              resizeMode: \"contain\"\n            }\n          });\n        }\n      };\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Balance\",\n    component: Balance\n  }), React.createElement(Tab.Screen, {\n    name: \"Ajustes\",\n    component: Ajustes\n  }));\n}\n\nexport default function App() {\n  var Stack = createStackNavigator();\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      llave = _useState4[0],\n      setLlave = _useState4[1];\n\n  var scheme = useColorScheme();\n  readPassword().then(function (value) {\n    setLlave(value);\n  });\n\n  if (llave != null && llave != \"\" && llave != undefined) {\n    return React.createElement(PaperProvider, {\n      theme: scheme === \"dark\" ? darkTheme : lightTheme\n    }, React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n      screenOptions: {\n        cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Splash\",\n      component: Splashc,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Pass\",\n      component: PassLogin,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Barra\",\n      component: Barra,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Moneda\",\n      component: Moneda,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Recibir\",\n      component: Recibir,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"EnviarCantidad\",\n      component: EnviarCantidad,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"EnviarDireccion\",\n      component: EnviarDireccion,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"QrReader\",\n      component: QrReader,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Editar\",\n      component: Editar,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Exclave\",\n      component: Exclave,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ExFrase\",\n      component: ExFrase,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }))));\n  } else {\n    return React.createElement(PaperProvider, {\n      theme: scheme === \"dark\" ? darkTheme : lightTheme\n    }, React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n      screenOptions: {\n        cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Splash\",\n      component: Splashc,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Slider\",\n      component: Slider,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Restaurar\",\n      component: Restaurar,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Crear\",\n      component: Crearcuenta,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"DocePalabras\",\n      component: DocePalabras,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Contrase\\xF1a\",\n      component: Contraseña,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ConfirContra\",\n      component: ConfirContra,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"PantallaCarga\",\n      component: PantallaCarga,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Barra\",\n      component: Barra,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Moneda\",\n      component: Moneda,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Recibir\",\n      component: Recibir,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"EnviarCantidad\",\n      component: EnviarCantidad,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"EnviarDireccion\",\n      component: EnviarDireccion,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"QrReader\",\n      component: QrReader,\n      options: {\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Editar\",\n      component: Editar,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Exclave\",\n      component: Exclave,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ExFrase\",\n      component: ExFrase,\n      options: {\n        headerShown: false,\n        gestureEnabled: false\n      }\n    }))));\n  }\n}","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/App.tsx"],"names":["React","useState","readPassword","NavigationContainer","createStackNavigator","CardStyleInterpolators","Balance","Crearcuenta","Home","Recibir","Splashc","QrReader","PantallaCarga","Ajustes","Slider","Moneda","Contraseña","DocePalabras","ConfirContra","PassLogin","Editar","Exclave","createBottomTabNavigator","EnviarCantidad","EnviarDireccion","DefaultTheme","Provider","PaperProvider","useTheme","RFValue","Restaurar","ExFrase","Tab","darkTheme","roundness","colors","primary","text","background","accent","surface","disabled","lightTheme","barios","Platform","OS","Barra","Appearance","getColorScheme","theme","setTheme","addChangeListener","scheme","colorScheme","route","headerShown","tabBarShowLabel","tabBarStyle","height","backgroundColor","borderTopColor","elevation","tabBarIcon","focused","imagenes","name","require","width","resizeMode","App","Stack","llave","setLlave","useColorScheme","then","value","undefined","cardStyleInterpolator","forFadeFromCenter","gestureEnabled"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  Image,\n  useColorScheme,\n  Appearance,\n  Platform,\n  Text,\n} from \"react-native\";\n\nimport \"react-native-url-polyfill/auto\";\n\nimport { readPassword } from \"./api\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport {\n  createStackNavigator,\n  CardStyleInterpolators,\n} from \"@react-navigation/stack\";\n\n//screens\nimport Balance from \"./src/screens/Balance\";\nimport Crearcuenta from \"./src/screens/Crearcuenta\";\nimport Home from \"./src/screens/Home\";\nimport Recibir from \"./src/screens/Recibir\";\nimport Splashc from \"./src/screens/Splashc\";\nimport QrReader from \"./src/screens/QrReader\";\nimport PantallaCarga from \"./src/screens/PantallaCarga\";\nimport Ajustes from \"./src/screens/Ajustes\";\nimport Slider from \"./src/screens/Slider\";\nimport Moneda from \"./src/screens/Moneda\";\nimport { Contraseña } from \"./src/screens/Contraseña\";\nimport DocePalabras from \"./src/screens/DocePalabras\";\nimport { ConfirContra } from \"./src/screens/ConfirContra\";\nimport { PassLogin } from \"./src/screens/PassLogin\";\nimport Editar from \"./src/screens/Edituser\";\nimport Exclave from \"./src/screens/Exclave\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport EnviarCantidad from \"./src/screens/EnviarCantidad\";\nimport EnviarDireccion from \"./src/screens/EnviarDireccion\";\n\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport { useTheme } from \"react-native-paper\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport Restaurar from \"./src/screens/Restaurar\";\nimport ExFrase from \"./src/screens/ExFrase\";\n\nconst Tab = createBottomTabNavigator();\n//Detecta el sistema en navigator\nconst darkTheme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    //slider\n    primary: \"#8B39CD\",\n    //contrario\n    text: \"#E2DBEE\",\n    //igual\n    background: \"#440577\",\n    //negro\n    accent: \"#FBF7FF\",\n    //bordeazul\n    surface: \"#00FFFF\",\n    //Morado negro\n    disabled: \"#FBF7FF\",\n  },\n};\n\nconst lightTheme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n\n    primary: \"#440577\",\n    text: \"#440577\",\n    background: \"#FBF7FF\",\n    accent: \"#4D4D4D\",\n    surface: \"#E2DBEE\",\n    disabled: \"#4D4D4D\",\n  },\n};\n\nconst barios = Platform.OS === \"ios\" ? 65 : 54;\n\nfunction Barra() {\n  const { colors } = useTheme();\n  //Detecta el modo del sistema\n  const [theme, setTheme] = useState(Appearance.getColorScheme());\n  Appearance.addChangeListener((scheme) => {\n    setTheme(scheme.colorScheme);\n  });\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerShown: false,\n        tabBarShowLabel: false,\n\n        tabBarStyle: {\n          height: RFValue(barios),\n          backgroundColor: colors.background,\n          borderTopColor: colors.background,\n          elevation: 0,\n        },\n\n        tabBarIcon: ({ focused }) => {\n          let imagenes;\n          if (route.name === \"Balance\") {\n            imagenes = focused\n              ? theme == \"dark\"\n                ? require(\"./src/screens/img/walletcolorDark.png\")\n                : require(\"./src/screens/img/walletcolor.png\")\n              : require(\"./src/screens/img/walletblanco.png\");\n          } else if (route.name === \"Ajustes\") {\n            imagenes = focused\n              ? theme == \"dark\"\n                ? require(\"./src/screens/img/settingscolorDark.png\")\n                : require(\"./src/screens/img/settingscolor.png\")\n              : require(\"./src/screens/img/settingsblanco.png\");\n          }\n          return (\n            <Image\n              source={imagenes}\n              style={{\n                height: RFValue(34.4),\n                width: RFValue(33.3),\n                resizeMode: \"contain\",\n              }}\n            />\n          );\n        },\n      })}\n    >\n      <Tab.Screen name=\"Balance\" component={Balance} />\n      <Tab.Screen name=\"Ajustes\" component={Ajustes} />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  const Stack = createStackNavigator();\n  const [llave, setLlave] = useState(\"\");\n  const scheme = useColorScheme();\n\n  readPassword().then((value) => {\n    setLlave(value);\n  });\n\n  if (llave != null && llave != \"\" && llave != undefined) {\n    return (\n      <PaperProvider theme={scheme === \"dark\" ? darkTheme : lightTheme}>\n        <NavigationContainer>\n          <Stack.Navigator\n            screenOptions={{\n              cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n            }}\n          >\n            <Stack.Screen\n              name=\"Splash\"\n              component={Splashc}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Pass\"\n              component={PassLogin}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Barra\"\n              component={Barra}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n            <Stack.Screen\n              name=\"Moneda\"\n              component={Moneda}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n            <Stack.Screen\n              name=\"Recibir\"\n              component={Recibir}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"EnviarCantidad\"\n              component={EnviarCantidad}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"EnviarDireccion\"\n              component={EnviarDireccion}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"QrReader\"\n              component={QrReader}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Editar\"\n              component={Editar}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n            <Stack.Screen\n              name=\"Exclave\"\n              component={Exclave}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n            <Stack.Screen\n              name=\"ExFrase\"\n              component={ExFrase}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n    );\n  } else {\n    return (\n      <PaperProvider theme={scheme === \"dark\" ? darkTheme : lightTheme}>\n        <NavigationContainer>\n          <Stack.Navigator\n            screenOptions={{\n              cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n            }}\n          >\n            <Stack.Screen\n              name=\"Splash\"\n              component={Splashc}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Home\"\n              component={Home}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Slider\"\n              component={Slider}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Restaurar\"\n              component={Restaurar}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Crear\"\n              component={Crearcuenta}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"DocePalabras\"\n              component={DocePalabras}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Contraseña\"\n              component={Contraseña}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"ConfirContra\"\n              component={ConfirContra}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"PantallaCarga\"\n              component={PantallaCarga}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Barra\"\n              component={Barra}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n            <Stack.Screen\n              name=\"Moneda\"\n              component={Moneda}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n            <Stack.Screen\n              name=\"Recibir\"\n              component={Recibir}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"EnviarCantidad\"\n              component={EnviarCantidad}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"EnviarDireccion\"\n              component={EnviarDireccion}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"QrReader\"\n              component={QrReader}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Editar\"\n              component={Editar}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n            <Stack.Screen\n              name=\"Exclave\"\n              component={Exclave}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n            <Stack.Screen\n              name=\"ExFrase\"\n              component={ExFrase}\n              options={{ headerShown: false, gestureEnabled: false }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}