{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport { readPassword } from \"../../api\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Lotiesplash } from \"./component/lottie\";\nimport { styles } from \"../theme/appTheme\";\nimport { useTheme } from 'react-native-paper';\n\nvar Splashc = function Splashc() {\n  var _useState = useState(Appearance.getColorScheme()),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  Appearance.addChangeListener(function (scheme) {\n    setTheme(scheme.colorScheme);\n  });\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var navigation = useNavigation();\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      llave = _useState4[0],\n      setLlave = _useState4[1];\n\n  readPassword().then(function (value) {\n    setLlave(value);\n  });\n  setTimeout(function () {\n    if (llave != null && llave != \"\" && llave != undefined) {\n      navigation.navigate(\"Pass\");\n    }\n\n    navigation.navigate(\"Home\");\n  }, 3500);\n  return React.createElement(SafeAreaView, {\n    style: [styles.body, {\n      backgroundColor: colors.background\n    }]\n  }, React.createElement(StatusBar, {\n    backgroundColor: colors.background,\n    barStyle: theme === 'dark' ? \"light-content\" : \"dark-content\"\n  }), React.createElement(View, {\n    style: [styles.completo, {\n      backgroundColor: colors.background,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }]\n  }, React.createElement(Lotiesplash, null)));\n};\n\nexport default Splashc;","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/src/screens/Splashc.tsx"],"names":["React","useState","readPassword","useNavigation","Lotiesplash","styles","useTheme","Splashc","Appearance","getColorScheme","theme","setTheme","addChangeListener","scheme","colorScheme","colors","navigation","llave","setLlave","then","value","setTimeout","undefined","navigate","body","backgroundColor","background","completo","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,YAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAGpB,kBAAyBN,QAAQ,CAACO,UAAU,CAACC,cAAX,EAAD,CAAjC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAaC,QAAb;;AACAH,EAAAA,UAAU,CAACI,iBAAX,CAA6B,UAACC,MAAD,EAAU;AACrCF,IAAAA,QAAQ,CAACE,MAAM,CAACC,WAAR,CAAR;AACD,GAFD;;AAGA,kBAAmBR,QAAQ,EAA3B;AAAA,MAAQS,MAAR,aAAQA,MAAR;;AAEA,MAAMC,UAAU,GAAGb,aAAa,EAAhC;;AACA,mBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOgB,KAAP;AAAA,MAAcC,QAAd;;AACAhB,EAAAA,YAAY,GAAGiB,IAAf,CAAoB,UAACC,KAAD,EAAW;AAC7BF,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,GAFD;AAIAC,EAAAA,UAAU,CAAC,YAAM;AACf,QAAIJ,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAI,EAA1B,IAAgCA,KAAK,IAAIK,SAA7C,EAAwD;AACtDN,MAAAA,UAAU,CAACO,QAAX,CAAoB,MAApB;AACD;;AACCP,IAAAA,UAAU,CAACO,QAAX,CAAoB,MAApB;AAEH,GANS,EAMP,IANO,CAAV;AAUA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE,CAAClB,MAAM,CAACmB,IAAR,EAAa;AAACC,MAAAA,eAAe,EAACV,MAAM,CAACW;AAAxB,KAAb;AAArB,KACE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAGX,MAAM,CAACW,UAD3B;AAEE,IAAA,QAAQ,EAAEhB,KAAK,KAAK,MAAV,GAAoB,eAApB,GAAsC;AAFlD,IADF,EAKE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLL,MAAM,CAACsB,QADF,EAEL;AAACF,MAAAA,eAAe,EAACV,MAAM,CAACW,UAAxB;AAAmCE,MAAAA,UAAU,EAAE,QAA/C;AAAyDC,MAAAA,cAAc,EAAE;AAAzE,KAFK;AADT,KAME,oBAAC,WAAD,OANF,CALF,CADF;AAgBD,CAzCD;;AA2CA,eAAetB,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, SafeAreaView, StatusBar, Appearance } from \"react-native\";\nimport { readPassword } from \"../../api\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Lotiesplash } from \"./component/lottie\";\nimport { styles } from \"../theme/appTheme\";\nimport { useTheme } from 'react-native-paper';\n\nconst Splashc = () => {\n\n  //Detecta el modo del sistema\n  const [theme,setTheme] = useState(Appearance.getColorScheme());\n  Appearance.addChangeListener((scheme)=>{\n    setTheme(scheme.colorScheme);\n  })\n  const { colors } = useTheme();\n\n  const navigation = useNavigation();\n  const [llave, setLlave] = useState(\"\");\n  readPassword().then((value) => {\n    setLlave(value);\n  });\n\n  setTimeout(() => {\n    if (llave != null && llave != \"\" && llave != undefined) {\n      navigation.navigate(\"Pass\" as any);\n    }\n      navigation.navigate(\"Home\" as any);\n    \n  }, 3500);\n\n\n\n  return (\n    <SafeAreaView style={[styles.body,{backgroundColor:colors.background}]}>\n      <StatusBar \n        backgroundColor= {colors.background}\n        barStyle={theme === 'dark' ?  \"light-content\" : \"dark-content\"} \n      />\n      <View\n        style={[\n          styles.completo,\n          {backgroundColor:colors.background,alignItems: \"center\", justifyContent: \"center\"}\n        ]}\n      >\n        <Lotiesplash />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default Splashc;\n"]},"metadata":{},"sourceType":"module"}