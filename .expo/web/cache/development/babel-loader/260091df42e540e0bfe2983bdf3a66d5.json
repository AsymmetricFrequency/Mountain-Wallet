{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport LottieView from \"lottie-react-native\";\nimport QRCode from \"react-native-qrcode-svg\";\nimport { styles } from \"../theme/appTheme\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nvar altura = Platform.OS === \"ios\" ? 22 : 25;\nvar windowWidth = Dimensions.get(\"screen\").width;\n\nvar Recibir = function Recibir(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      pmsg = _route$params.pmsg,\n      publicKey = _route$params.publicKey;\n  console.log(publicKey);\n\n  var ima = function ima() {\n    if (pmsg == \"Condorcoin\") {\n      return React.createElement(Image, {\n        style: styles.imgmoneda,\n        source: require(\"./img/billeteras/logocondor.png\")\n      });\n    } else if (pmsg == \"Solana\") {\n      return React.createElement(Image, {\n        style: styles.imgmoneda,\n        source: require(\"./img/billeteras/solana.png\")\n      });\n    } else if (pmsg == \"Tether\") {\n      return React.createElement(Image, {\n        style: styles.imgmoneda,\n        source: require(\"./img/billeteras/tether.png\")\n      });\n    }\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copiadoModal = _useState2[0],\n      setCopiadoModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animacion = _useState4[0],\n      setAnimacion = _useState4[1];\n\n  var CopyToClipboard = function CopyToClipboard() {\n    Clipboard.setString(publicKey);\n    setAnimacion(true);\n\n    if (Platform.OS === \"android\") {\n      ToastAndroid.show(\"Dirección copiada\", ToastAndroid.SHORT);\n    } else {\n      Alert.alert(\"Dirección copiada\");\n    }\n  };\n\n  var animation = React.useRef(null);\n\n  var amj = function amj() {\n    var number = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (Platform.OS === \"android\") {\n      number = 2000;\n    } else if (Platform.OS === \"ios\") {\n      number = 3000;\n    }\n\n    return number;\n  };\n\n  React.useEffect(function () {\n    if (animacion === true) {\n      animation.current.play(0, 50);\n      setTimeout(function () {\n        setAnimacion(false);\n      }, amj());\n    } else if (animacion === false) {\n      if (Platform.OS === \"android\") {\n        animation.current.play(18, 18);\n      } else if (Platform.OS === \"ios\") {\n        animation.current.play(18, 50);\n      }\n    }\n  }, [animacion]);\n  return React.createElement(SafeAreaView, {\n    style: styles.body\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"#FBF7FF\",\n    barStyle: \"dark-content\"\n  }), React.createElement(View, {\n    style: styles.completo\n  }, React.createElement(View, {\n    style: styles.titlecc\n  }, React.createElement(Text, {\n    style: styles.titletx\n  }, \"Recibir \", pmsg)), React.createElement(View, {\n    style: styles.logorb\n  }, ima()), React.createElement(View, {\n    style: styles.cajaatras\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.btndo,\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: altura,\n    color: \"#440577\"\n  }))), React.createElement(View, {\n    style: styles.cuadroQR\n  }, React.createElement(QRCode, {\n    size: windowWidth * 0.35,\n    value: publicKey\n  })), React.createElement(View, {\n    style: styles.cajadirecc\n  }, React.createElement(Text, {\n    style: styles.txtdirecc\n  }, \"Direcci\\xF3n de cartera\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return CopyToClipboard();\n    },\n    activeOpacity: 0.5\n  }, React.createElement(View, {\n    style: styles.tablaqr\n  }, React.createElement(View, {\n    style: styles.cbtncop\n  }, React.createElement(LottieView, {\n    ref: animation,\n    style: styles.lottiecopy,\n    source: require(\"../screens/Lottie/copy.json\"),\n    autoPlay: false,\n    loop: false\n  })), React.createElement(View, {\n    style: styles.cuadroqr\n  }, React.createElement(Text, {\n    numberOfLines: 3,\n    style: styles.txtqr\n  }, publicKey))))));\n};\n\nexport default Recibir;","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/src/screens/Recibir.tsx"],"names":["React","useState","LottieView","QRCode","styles","Icon","altura","Platform","OS","windowWidth","Dimensions","get","width","Recibir","navigation","route","params","pmsg","publicKey","console","log","ima","imgmoneda","require","copiadoModal","setCopiadoModal","animacion","setAnimacion","CopyToClipboard","Clipboard","setString","ToastAndroid","show","SHORT","Alert","alert","animation","useRef","amj","number","useEffect","current","play","setTimeout","body","completo","titlecc","titletx","logorb","cajaatras","btndo","goBack","cuadroQR","cajadirecc","txtdirecc","tablaqr","cbtncop","lottiecopy","cuadroqr","txtqr"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Image,\r\n  Clipboard,\r\n  Platform,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  StatusBar,\r\n  ToastAndroid,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { readPublicKey } from \"../../api\";\r\n\r\nimport LottieView from \"lottie-react-native\";\r\nimport QRCode from \"react-native-qrcode-svg\";\r\nimport { styles } from \"../theme/appTheme\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\n\r\n\r\nconst altura = Platform.OS === \"ios\" ? 22 : 25;\r\nconst windowWidth = Dimensions.get(\"screen\").width;\r\n\r\nconst Recibir = ({ navigation, route }: { navigation: any; route: any }) => {\r\n\r\n  const { pmsg, publicKey } = route.params;\r\n\r\n  console.log(publicKey);\r\n  \r\n\r\n  const ima = () => {\r\n    if (pmsg == \"Condorcoin\") {\r\n      return (\r\n        <Image\r\n          style={styles.imgmoneda}\r\n          source={require(\"./img/billeteras/logocondor.png\")}\r\n        />\r\n      );\r\n    } else if (pmsg == \"Solana\") {\r\n      return (\r\n        <Image\r\n          style={styles.imgmoneda}\r\n          source={require(\"./img/billeteras/solana.png\")}\r\n        />\r\n      );\r\n    } else if (pmsg == \"Tether\") {\r\n      return (\r\n        <Image\r\n          style={styles.imgmoneda}\r\n          source={require(\"./img/billeteras/tether.png\")}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const [copiadoModal, setCopiadoModal] = useState(false);\r\n  const [animacion, setAnimacion] = useState(false);\r\n  \r\n  const CopyToClipboard = () => {\r\n    Clipboard.setString(publicKey);\r\n    setAnimacion(true);\r\n    if (Platform.OS === \"android\") {\r\n      ToastAndroid.show(\"Dirección copiada\", ToastAndroid.SHORT);\r\n    } else {\r\n      Alert.alert(\"Dirección copiada\");\r\n    }\r\n  };\r\n  //Animacion copiado\r\n  const animation = React.useRef(null);\r\n  const amj = (number=0) => {\r\n    if (Platform.OS === \"android\") {\r\n      number= 2000\r\n    } else if (Platform.OS === \"ios\") {\r\n      number = 3000\r\n    }\r\n    return number\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (animacion === true) {\r\n      animation.current.play(0,50);\r\n      setTimeout(() => {\r\n        setAnimacion(false);\r\n      },amj());\r\n    } else if (animacion === false) {\r\n      if (Platform.OS === \"android\") {\r\n        animation.current.play(18,18);\r\n      } else if (Platform.OS === \"ios\"){\r\n        animation.current.play(18,50);\r\n      }\r\n    }\r\n  }, [animacion]);\r\n\r\n  //funcion s llave publica\r\n  // const [pKey,setPKey] = useState(\"pubKey\")\r\n\r\n  // async function obtenerPKey(){\r\n  //     readPublicKey().then((val)=>{\r\n  //         console.log(\"PUBLIC KEY:\");\r\n  //         console.log(val);\r\n  //         setPKey(val)\r\n  //     })\r\n  // }\r\n\r\n  // obtenerPKey()\r\n\r\n  return (\r\n    <SafeAreaView style={styles.body}>\r\n     \r\n      <StatusBar backgroundColor=\"#FBF7FF\" barStyle={\"dark-content\"} />\r\n      <View style={styles.completo}>\r\n        <View style={styles.titlecc}>\r\n          <Text style={styles.titletx}>Recibir {pmsg}</Text>\r\n        </View>\r\n        <View style={styles.logorb}>{ima()}</View>\r\n        <View style={styles.cajaatras}>\r\n          <TouchableOpacity\r\n            activeOpacity={0.5}\r\n            style={styles.btndo}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <Icon name=\"arrow-left\" size={altura} color=\"#440577\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* cuadro blanco */}\r\n        {/* Imagen QR */}\r\n        <View style={styles.cuadroQR}>\r\n          <QRCode size={windowWidth * 0.35} value={publicKey} />\r\n        </View>\r\n        {/* Direccion y Copiar */}\r\n        <View style={styles.cajadirecc}>\r\n          <Text style={styles.txtdirecc}>Dirección de cartera</Text>\r\n        </View>\r\n        <TouchableOpacity onPress={() => CopyToClipboard()} activeOpacity={0.5}>\r\n          <View style={styles.tablaqr}>\r\n            <View style={styles.cbtncop}>\r\n              <LottieView\r\n                ref={animation}\r\n                style={styles.lottiecopy}\r\n                source={require(\"../screens/Lottie/copy.json\")}\r\n                autoPlay={false}\r\n                loop={false}\r\n              />\r\n            </View>\r\n            <View style={styles.cuadroqr}>\r\n              <Text numberOfLines={3} style={styles.txtqr}>\r\n                {publicKey}\r\n              </Text>\r\n\r\n              {/* <TextInput style={styles.inputqr} value={pKey} editable={false}/> */}\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Recibir;"]},"metadata":{},"sourceType":"module"}