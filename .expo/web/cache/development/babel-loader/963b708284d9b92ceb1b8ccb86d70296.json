{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport React, { useState } from 'react';\nimport { styles } from \"../theme/appTheme\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { useTheme } from 'react-native-paper';\nvar altura = Platform.OS === \"ios\" ? 22 : 25;\n\nvar Exclave = function Exclave(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var secretKey = (_route$params = route.params) == null ? void 0 : _route$params.llave_privada;\n\n  var _useState = useState(Appearance.getColorScheme()),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  Appearance.addChangeListener(function (scheme) {\n    setTheme(scheme.colorScheme);\n  });\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cambio = _useState4[0],\n      setCambio = _useState4[1];\n\n  var mostrar = function mostrar() {\n    setCambio(true);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: [styles.body, {\n      backgroundColor: colors.background\n    }]\n  }, React.createElement(StatusBar, {\n    backgroundColor: colors.background,\n    barStyle: theme === 'dark' ? \"light-content\" : \"dark-content\"\n  }), React.createElement(View, {\n    style: [styles.completo, {\n      backgroundColor: colors.background\n    }]\n  }, React.createElement(View, {\n    style: styles.titlecc\n  }, React.createElement(Text, {\n    style: [styles.titlex, {\n      color: colors.text\n    }]\n  }, \"Exportar clave privada\")), React.createElement(View, {\n    style: styles.cajaatras\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.btndo,\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: altura,\n    color: \"#440577\"\n  }))), React.createElement(Image, {\n    style: styles.imgex,\n    source: require(\"./img/opacity-rerstaurar-mnemonic.png\")\n  }), React.createElement(View, {\n    style: [styles.cajaex, {\n      borderColor: colors.text\n    }]\n  }, cambio === true ? React.createElement(Text, {\n    style: {\n      color: colors.text\n    }\n  }, \"[\", secretKey, \"]\") : React.createElement(Text, null)), React.createElement(View, {\n    style: styles.cajabtnex\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.btnDone, {\n      backgroundColor: colors.text\n    }],\n    activeOpacity: 0.5,\n    onPress: mostrar,\n    disabled: cambio\n  }, React.createElement(Text, {\n    style: [styles.txtDonex, {\n      color: colors.background\n    }]\n  }, \"Mostrar clave privada\")))));\n};\n\nexport default Exclave;","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/src/screens/Exclave.tsx"],"names":["React","useState","styles","Icon","useTheme","altura","Platform","OS","Exclave","navigation","route","secretKey","params","llave_privada","Appearance","getColorScheme","theme","setTheme","addChangeListener","scheme","colorScheme","colors","cambio","setCambio","mostrar","body","backgroundColor","background","completo","titlecc","titlex","color","text","cajaatras","btndo","goBack","imgex","require","cajaex","borderColor","cajabtnex","btnDone","txtDonex"],"mappings":"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","sourcesContent":["import { View, Text, SafeAreaView, StatusBar, TouchableOpacity, Platform,Image, Appearance } from 'react-native';\nimport React, { useState } from 'react';\nimport { styles } from \"../theme/appTheme\";\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\nimport { useTheme } from 'react-native-paper';\n\nconst altura = Platform.OS === \"ios\" ? 22 : 25;\n\n\nconst Exclave = ({ navigation, route }: { navigation: any, route: any }) => {\n\n  const secretKey = route.params?.llave_privada\n\n  //Detecta el modo del sistema\n  const [theme,setTheme] = useState(Appearance.getColorScheme());\n  Appearance.addChangeListener((scheme)=>{\n    setTheme(scheme.colorScheme);\n  })\n  const { colors } = useTheme();\n\n  const[cambio,setCambio]= useState(false)\n\n  const mostrar = () => {\n    setCambio(true)\n  }\n  \n\n  return (\n    <SafeAreaView style={[styles.body,{backgroundColor:colors.background}]}>\n        <StatusBar \n          backgroundColor= {colors.background}\n          barStyle={theme === 'dark' ?  \"light-content\" : \"dark-content\"} \n        />\n        <View style={[styles.completo,{backgroundColor:colors.background}]}>\n            <View style={styles.titlecc}>\n              <Text style={[styles.titlex,{color:colors.text}]}>Exportar clave privada</Text>\n            </View>\n            <View style={styles.cajaatras}>\n              <TouchableOpacity\n                  activeOpacity={0.5}\n                  style={styles.btndo}\n                  onPress={() => navigation.goBack()}\n              >\n                  <Icon name=\"arrow-left\" size={altura} color=\"#440577\" />\n              </TouchableOpacity>\n            </View>\n            <Image\n              style={styles.imgex}\n              source={require(\"./img/opacity-rerstaurar-mnemonic.png\")}\n            />\n            <View style={[styles.cajaex,{borderColor:colors.text}]}> \n              { cambio === true ?\n                <Text style={{color:colors.text}}>[{secretKey}]</Text>\n                :\n                <Text></Text>\n              }\n              \n            </View>\n            <View style={styles.cajabtnex}>\n            <TouchableOpacity\n              style={[styles.btnDone,{ backgroundColor:colors.text}]}\n              activeOpacity={0.5}  \n              onPress={mostrar}   \n              disabled={cambio}     \n            >\n              <Text style={[styles.txtDonex,{color:colors.background}]}>Mostrar clave privada</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n    </SafeAreaView>\n  );\n};\n\nexport default Exclave;\n"]},"metadata":{},"sourceType":"module"}