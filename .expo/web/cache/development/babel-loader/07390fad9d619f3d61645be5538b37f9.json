{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport React, { useState, useEffect } from \"react\";\nimport { styles } from \"../theme/appTheme\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { WebView } from \"react-native-webview\";\nimport { useTheme } from \"react-native-paper\";\nimport { readPublicKey } from \"../../api\";\nvar altura = Platform.OS === \"ios\" ? 22 : 25;\n\nvar Moneda = function Moneda(_ref) {\n  var _route$params, _route$params2;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var mnemonic = (_route$params = route.params) == null ? void 0 : _route$params.memo;\n  var mint = (_route$params2 = route.params) == null ? void 0 : _route$params2.mint;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      publicKey = _useState2[0],\n      setPublicKey = _useState2[1];\n\n  function setearPubKey() {\n    var llavePublica;\n    return _regeneratorRuntime.async(function setearPubKey$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            llavePublica = readPublicKey();\n            llavePublica.then(function (value) {\n              setPublicKey(value);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  setearPubKey();\n\n  var _useState3 = useState(Appearance.getColorScheme()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      theme = _useState4[0],\n      setTheme = _useState4[1];\n\n  Appearance.addChangeListener(function (scheme) {\n    setTheme(scheme.colorScheme);\n  });\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _route$params3 = route.params,\n      msg = _route$params3.msg,\n      mon = _route$params3.mon;\n\n  var ima = function ima() {\n    if (msg == \"Condorcoin\") {\n      return React.createElement(Image, {\n        style: styles.imgmoneda,\n        source: require(\"./img/billeteras/logocondor.png\")\n      });\n    } else if (msg == \"Solana\") {\n      return React.createElement(Image, {\n        style: styles.imgmoneda,\n        source: require(\"./img/billeteras/solana.png\")\n      });\n    } else if (msg == \"Tether\") {\n      return React.createElement(Image, {\n        style: styles.imgmoneda,\n        source: require(\"./img/billeteras/tether.png\")\n      });\n    }\n  };\n\n  var moneda = function moneda() {\n    if (msg == \"Condorcoin\") {\n      return React.createElement(Text, {\n        style: styles.cndr\n      }, \"CNDR\");\n    } else if (msg == \"Solana\") {\n      return React.createElement(Text, {\n        style: styles.cndr\n      }, \"SOL\");\n    } else if (msg == \"Tether\") {\n      return React.createElement(Text, {\n        style: styles.cndr\n      }, \"TETHER\");\n    }\n  };\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      coins = _useState6[0],\n      setCoins = _useState6[1];\n\n  var loadData = function loadData() {\n    var res, data;\n    return _regeneratorRuntime.async(function loadData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=solana&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=24h\"));\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            data = _context2.sent;\n            setCoins(data);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadData();\n  }, []);\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refresh = _useState8[0],\n      setRefresh = _useState8[1];\n\n  var onRefre = function onRefre() {\n    setRefresh(true);\n    setTimeout(function () {\n      setRefresh(false);\n    }, 1000);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: [styles.body, {\n      backgroundColor: colors.background\n    }]\n  }, React.createElement(StatusBar, {\n    backgroundColor: colors.background,\n    barStyle: theme === \"dark\" ? \"light-content\" : \"dark-content\"\n  }), React.createElement(View, {\n    style: [styles.completo, {\n      backgroundColor: colors.background\n    }]\n  }, React.createElement(View, {\n    style: styles.cajaatras\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.btndo,\n    onPress: function onPress() {\n      return navigation.navigate(\"Barra\");\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: altura,\n    color: \"#440577\"\n  }))), React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refresh,\n      onRefresh: onRefre,\n      tintColor: \"#5b298a\",\n      colors: [\"#5b298a\", \"#7e54a7\"]\n    }),\n    horizontal: false,\n    showsVerticalScrollIndicator: false\n  }, React.createElement(View, {\n    style: styles.logomoneda\n  }, ima()), React.createElement(View, {\n    style: styles.cajamon\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: [styles.montxt, {\n      textTransform: \"uppercase\",\n      color: colors.disabled\n    }]\n  }, msg)), React.createElement(View, null, React.createElement(Text, {\n    style: [styles.montxt, {\n      color: colors.disabled\n    }]\n  }, mon))), React.createElement(View, {\n    style: styles.price\n  }, React.createElement(FlatList, {\n    data: coins,\n    refreshing: refresh,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        style: {\n          color: colors.text\n        }\n      }, item.current_price);\n    }\n  })), React.createElement(View, {\n    style: styles.cajasf\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: [styles.saldofull, {\n      color: colors.text\n    }]\n  }, \"0\"))), React.createElement(View, {\n    style: styles.dcER\n  }, React.createElement(View, {\n    style: styles.dcE\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.btnR, styles.sombras, {\n      backgroundColor: colors.text\n    }],\n    activeOpacity: 0.5,\n    onPress: function onPress() {\n      return navigation.navigate(\"EnviarCantidad\", {\n        pmsg: msg,\n        mon: moneda(),\n        memo: mnemonic,\n        mint: mint\n      });\n    }\n  }, React.createElement(Text, {\n    style: [styles.textbtnR, {\n      color: colors.background\n    }]\n  }, \"Enviar\"))), React.createElement(View, {\n    style: styles.dcR\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.btnR, styles.sombras, {\n      backgroundColor: colors.text\n    }],\n    activeOpacity: 0.5,\n    onPress: function onPress() {\n      return navigation.navigate(\"Recibir\", {\n        pmsg: msg,\n        publicKey: publicKey\n      });\n    }\n  }, React.createElement(Text, {\n    style: [styles.textbtnR, {\n      color: colors.background\n    }]\n  }, \"Recibir\")))), React.createElement(View, {\n    style: styles.graf\n  }, React.createElement(WebView, {\n    source: {\n      uri: theme === \"light\" ? \"https://condorcoinco.github.io/charts/\" + msg + \".html\" : \"https://condorcoinco.github.io/charts/\" + msg + \"Dark.html\"\n    },\n    style: {\n      flex: 1\n    }\n  })))));\n};\n\nexport default Moneda;","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/src/screens/Moneda.tsx"],"names":["React","useState","useEffect","styles","Icon","WebView","useTheme","readPublicKey","altura","Platform","OS","Moneda","navigation","route","mnemonic","params","memo","mint","publicKey","setPublicKey","setearPubKey","llavePublica","then","value","Appearance","getColorScheme","theme","setTheme","addChangeListener","scheme","colorScheme","colors","msg","mon","ima","imgmoneda","require","moneda","cndr","coins","setCoins","loadData","fetch","res","json","data","refresh","setRefresh","onRefre","setTimeout","body","backgroundColor","background","completo","cajaatras","btndo","navigate","logomoneda","cajamon","montxt","textTransform","color","disabled","price","item","text","current_price","cajasf","saldofull","dcER","dcE","btnR","sombras","pmsg","textbtnR","dcR","graf","uri","flex"],"mappings":"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","sourcesContent":["import {\n  View,\n  Text,\n  SafeAreaView,\n  TouchableOpacity,\n  Platform,\n  Image,\n  StatusBar,\n  ScrollView,\n  RefreshControl,\n  FlatList,\n  Appearance,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { styles } from \"../theme/appTheme\";\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\nimport { WebView } from \"react-native-webview\";\nimport { useTheme } from \"react-native-paper\";\n\nimport { readPublicKey } from \"../../api\";\n\nconst altura = Platform.OS === \"ios\" ? 22 : 25;\n\nconst Moneda = ({ navigation, route }: { navigation: any; route: any }) => {\n\n  const mnemonic = route.params?.memo\n  const mint = route.params?.mint\n\n  const [publicKey, setPublicKey] = useState(\"\")\n\n  async function setearPubKey() {\n    const llavePublica = readPublicKey()\n    llavePublica.then((value) => {\n      setPublicKey(value)\n    })\n  }\n\n  setearPubKey()\n\n  //Detecta el modo del sistema\n  const [theme, setTheme] = useState(Appearance.getColorScheme());\n  Appearance.addChangeListener((scheme) => {\n    setTheme(scheme.colorScheme);\n  });\n  const { colors } = useTheme();\n\n  const { msg, mon } = route.params;\n\n  const ima = () => {\n    if (msg == \"Condorcoin\") {\n      return (\n        <Image\n          style={styles.imgmoneda}\n          source={require(\"./img/billeteras/logocondor.png\")}\n        />\n      );\n    } else if (msg == \"Solana\") {\n      return (\n        <Image\n          style={styles.imgmoneda}\n          source={require(\"./img/billeteras/solana.png\")}\n        />\n      );\n    } else if (msg == \"Tether\") {\n      return (\n        <Image\n          style={styles.imgmoneda}\n          source={require(\"./img/billeteras/tether.png\")}\n        />\n      );\n    }\n  };\n\n  const moneda = () => {\n    if (msg == \"Condorcoin\") {\n      return <Text style={styles.cndr}>CNDR</Text>;\n    } else if (msg == \"Solana\") {\n      return <Text style={styles.cndr}>SOL</Text>;\n    } else if (msg == \"Tether\") {\n      return <Text style={styles.cndr}>TETHER</Text>;\n    }\n  };\n\n  const [coins, setCoins] = useState();\n\n  const loadData = async () => {\n    const res = await fetch(\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=solana&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=24h\"\n    );\n    const data = await res.json();\n    setCoins(data);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  // // refresco\n  const [refresh, setRefresh] = useState(false);\n\n  const onRefre = () => {\n    setRefresh(true);\n\n    setTimeout(() => {\n      setRefresh(false);\n    }, 1000);\n  };\n\n  return (\n    <SafeAreaView style={[styles.body, { backgroundColor: colors.background }]}>\n      <StatusBar\n        backgroundColor={colors.background}\n        barStyle={theme === \"dark\" ? \"light-content\" : \"dark-content\"}\n      />\n      <View style={[styles.completo, { backgroundColor: colors.background }]}>\n        <View style={styles.cajaatras}>\n          <TouchableOpacity\n            activeOpacity={0.5}\n            style={styles.btndo}\n            onPress={() => navigation.navigate(\"Barra\")}\n          >\n            <Icon name=\"arrow-left\" size={altura} color=\"#440577\" />\n          </TouchableOpacity>\n        </View>\n\n        <ScrollView\n          refreshControl={\n            <RefreshControl\n              refreshing={refresh}\n              onRefresh={onRefre}\n              tintColor=\"#5b298a\"\n              colors={[\"#5b298a\", \"#7e54a7\"]}\n            />\n          }\n          horizontal={false}\n          showsVerticalScrollIndicator={false}\n        >\n          <View style={styles.logomoneda}>{ima()}</View>\n          <View style={styles.cajamon}>\n            <View>\n              <Text\n                style={[\n                  styles.montxt,\n                  { textTransform: \"uppercase\", color: colors.disabled },\n                ]}\n              >\n                {msg}\n              </Text>\n            </View>\n            <View>\n              <Text style={[styles.montxt, { color: colors.disabled }]}>\n                {mon}\n              </Text>\n            </View>\n          </View>\n          <View style={styles.price}>\n            <FlatList\n              data={coins}\n              refreshing={refresh}\n              renderItem={({ item }) => {\n                return (\n                  <Text style={{ color: colors.text }}>\n                    {item.current_price}\n                  </Text>\n                );\n              }}\n            ></FlatList>\n          </View>\n          {/* <Text>{coins}</Text> */}\n          <View style={styles.cajasf}>\n            <ScrollView\n              horizontal={true}\n              showsHorizontalScrollIndicator={false}\n            >\n              <Text\n                numberOfLines={1}\n                style={[styles.saldofull, { color: colors.text }]}\n              >\n                0\n              </Text>\n            </ScrollView>\n          </View>\n          <View style={styles.dcER}>\n            <View style={styles.dcE}>\n              <TouchableOpacity\n                style={[\n                  styles.btnR,\n                  styles.sombras,\n                  { backgroundColor: colors.text },\n                ]}\n                activeOpacity={0.5}\n                onPress={() =>\n                  navigation.navigate(\"EnviarCantidad\", {\n                    pmsg: msg,\n                    mon: moneda(),\n                    memo: mnemonic,\n                    mint: mint\n                  })\n                }\n              >\n                <Text style={[styles.textbtnR, { color: colors.background }]}>\n                  Enviar\n                </Text>\n              </TouchableOpacity>\n            </View>\n            <View style={styles.dcR}>\n              <TouchableOpacity\n                style={[\n                  styles.btnR,\n                  styles.sombras,\n                  { backgroundColor: colors.text },\n                ]}\n                activeOpacity={0.5}\n                onPress={() => navigation.navigate(\"Recibir\", { pmsg: msg, publicKey: publicKey })}\n              >\n                <Text style={[styles.textbtnR, { color: colors.background }]}>\n                  Recibir\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n\n          <View style={styles.graf}>\n            <WebView\n              source={{\n                uri:\n                  theme === \"light\"\n                    ? `https://condorcoinco.github.io/charts/${msg}.html`\n                    : `https://condorcoinco.github.io/charts/${msg}Dark.html`,\n              }}\n              style={{ flex: 1 }}\n            />\n          </View>\n        </ScrollView>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default Moneda;\n"]},"metadata":{},"sourceType":"module"}