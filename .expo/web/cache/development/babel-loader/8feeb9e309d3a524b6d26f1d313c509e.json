{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport * as Animatable from 'react-native-animatable';\nimport { savePassword } from \"../../api\";\nimport LottieView from 'lottie-react-native';\nimport * as Font from 'expo-font';\nvar windowWidth = Dimensions.get('screen').width;\nvar windowHeight = Dimensions.get('screen').height;\n\nvar CodigoVerificacion = function CodigoVerificacion(_ref) {\n  var navigation = _ref.navigation;\n  var pin1Ref = useRef(null);\n  var pin2Ref = useRef(null);\n  var pin3Ref = useRef(null);\n  var pin4Ref = useRef(null);\n  var cof1Ref = useRef(null);\n  var cof2Ref = useRef(null);\n  var cof3Ref = useRef(null);\n  var cof4Ref = useRef(null);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      pin1 = _useState2[0],\n      setPin1 = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pin2 = _useState4[0],\n      setPin2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pin3 = _useState6[0],\n      setPin3 = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pin4 = _useState8[0],\n      setPin4 = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cof1 = _useState10[0],\n      setCof1 = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cof2 = _useState12[0],\n      setCof2 = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cof3 = _useState14[0],\n      setCof3 = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cof4 = _useState16[0],\n      setCof4 = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      anmt = _useState18[0],\n      setanmt = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      incorrectoModal = _useState20[0],\n      setIncorrectoModal = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      vacioModal = _useState22[0],\n      setvacioModal = _useState22[1];\n\n  function validarPassword() {\n    if (pin1 === cof1 && pin2 === cof2 && pin3 === cof3 && pin4 === cof4 && pin1 != \"\" && pin2 != \"\" && pin3 != \"\" && pin4 != \"\") {\n      var password = pin1 + pin2 + pin3 + pin4;\n      savePassword(password);\n      navigation.navigate('PantallaCarga');\n    } else if (pin1 == \"\" || pin2 == \"\" || pin3 == \"\" || pin4 == \"\" || cof1 == \"\" || cof2 == \"\" || cof3 == \"\" || cof4 == \"\") {\n      setvacioModal(true);\n      setanmt(\"fadeInDownBig\");\n      setTimeout(function () {\n        setanmt(\"fadeOutUp\");\n        setTimeout(function () {\n          setvacioModal(false);\n        }, 100);\n      }, 2000);\n    } else {\n      setIncorrectoModal(true);\n      setanmt(\"fadeInDownBig\");\n      setTimeout(function () {\n        setanmt(\"fadeOutUp\");\n        setTimeout(function () {\n          setIncorrectoModal(false);\n        }, 100);\n      }, 2000);\n    }\n  }\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      fontsLoaded = _useState24[0],\n      setFontsLoaded = _useState24[1];\n\n  useEffect(function () {\n    if (!fontsLoaded) {\n      loadFonts();\n    }\n  });\n\n  var loadFonts = function loadFonts() {\n    return _regeneratorRuntime.async(function loadFonts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync({\n              'opensans-regular': require(\"../../assets/fonts/OpenSans-Regular.ttf\")\n            }));\n\n          case 2:\n            setFontsLoaded(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!fontsLoaded) {\n    return React.createElement(View, null);\n  }\n\n  return React.createElement(KeyboardAwareScrollView, {\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    contentContainerStyle: styles.body,\n    scrollEnabled: false\n  }, React.createElement(Modal, {\n    visible: incorrectoModal,\n    transparent: true,\n    onRequestClose: function onRequestClose() {\n      return setIncorrectoModal(false);\n    },\n    hardwareAccelerated: true\n  }, React.createElement(Animatable.View, {\n    animation: anmt,\n    duration: 600\n  }, React.createElement(View, {\n    style: styles.bodymodal\n  }, React.createElement(View, {\n    style: styles.ventanamodal\n  }, React.createElement(View, {\n    style: styles.icontext\n  }, React.createElement(View, {\n    style: styles.contenedorlottie\n  }, React.createElement(LottieView, {\n    style: styles.lottie,\n    source: require(\"./Lottie/error.json\"),\n    autoPlay: true\n  }))), React.createElement(View, {\n    style: styles.textnoti\n  }, React.createElement(View, {\n    style: styles.contenedortext\n  }, React.createElement(Text, {\n    style: styles.texticon\n  }, \"Error\")), React.createElement(View, null, React.createElement(Text, {\n    style: styles.notificacion\n  }, \"Los codigos no coinciden\"))))))), React.createElement(Modal, {\n    visible: vacioModal,\n    transparent: true,\n    onRequestClose: function onRequestClose() {\n      return setvacioModal(false);\n    },\n    hardwareAccelerated: true\n  }, React.createElement(Animatable.View, {\n    animation: anmt,\n    duration: 600\n  }, React.createElement(View, {\n    style: styles.bodymodal\n  }, React.createElement(View, {\n    style: styles.ventanamodal\n  }, React.createElement(View, {\n    style: styles.icontext\n  }, React.createElement(View, {\n    style: styles.contenedorlottie\n  }, React.createElement(LottieView, {\n    style: styles.lottie,\n    source: require(\"./Lottie/error.json\"),\n    autoPlay: true\n  }))), React.createElement(View, {\n    style: styles.textnoti\n  }, React.createElement(View, {\n    style: styles.contenedortext\n  }, React.createElement(Text, {\n    style: styles.texticon\n  }, \"Error\")), React.createElement(View, null, React.createElement(Text, {\n    style: styles.notificacion\n  }, \"Algunos de los campos estan vacios\"))))))), React.createElement(View, {\n    style: styles.containeruno\n  }, React.createElement(Image, {\n    source: require(\"./img/logocolor.png\"),\n    style: styles.logo\n  }), React.createElement(View, {\n    style: styles.containerBlanco\n  }, React.createElement(View, {\n    style: styles.imgmano\n  }, React.createElement(Image, {\n    source: require(\"./img/logmanito.png\"),\n    style: styles.logomano\n  })), React.createElement(Text, {\n    style: styles.textuno,\n    numberOfLines: 2\n  }, \"CREAR C\\xD3DIGO DE SEGURIDAD\"), React.createElement(View, {\n    style: styles.containerunorama\n  }, React.createElement(TextInput, {\n    style: styles.TextInput1,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    ref: pin1Ref,\n    onChangeText: function onChangeText(text) {\n      if (text === \"\") {\n        setPin1(\"\");\n      } else {\n        text && pin2Ref.current.focus();\n        setPin1(text);\n      }\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput1,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    ref: pin2Ref,\n    onChangeText: function onChangeText(text) {\n      if (text === \"\") {\n        setPin2(\"\");\n      } else {\n        text && pin3Ref.current.focus();\n        setPin2(text);\n      }\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput1,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    ref: pin3Ref,\n    onChangeText: function onChangeText(text) {\n      if (text === \"\") {\n        setPin3(\"\");\n      } else {\n        text && pin4Ref.current.focus();\n        setPin3(text);\n      }\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput1,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    ref: pin4Ref,\n    onChangeText: function onChangeText(text) {\n      if (text === \"\") {\n        setPin4(\"\");\n      } else {\n        text && cof1Ref.current.focus();\n        setPin4(text);\n      }\n    }\n  })), React.createElement(Text, {\n    style: styles.textdos,\n    numberOfLines: 2\n  }, \"CONFIRMAR C\\xD3DIGO DE SEGURIDAD\"), React.createElement(View, {\n    style: styles.containerunorama\n  }, React.createElement(TextInput, {\n    style: styles.TextInput2,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    ref: cof1Ref,\n    onChangeText: function onChangeText(text) {\n      if (text === \"\") {\n        setCof1(\"\");\n      } else {\n        text && cof2Ref.current.focus();\n        setCof1(text);\n      }\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput2,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    ref: cof2Ref,\n    onChangeText: function onChangeText(text) {\n      if (text === \"\") {\n        setCof2(\"\");\n      } else {\n        text && cof3Ref.current.focus();\n        setCof2(text);\n      }\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput2,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    ref: cof3Ref,\n    onChangeText: function onChangeText(text) {\n      if (text === \"\") {\n        setCof3(\"\");\n      } else {\n        text && cof4Ref.current.focus();\n        setCof3(text);\n      }\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput2,\n    maxLength: 1,\n    keyboardType: \"numeric\",\n    ref: cof4Ref,\n    onChangeText: function onChangeText(text) {\n      if (text === \"\") {\n        setCof4(text);\n      } else if (text != \"\" && pin1 != \"\" && pin2 != \"\" && pin3 != \"\" && pin4 != \"\" && cof1 != \"\" && cof2 != \"\" && cof3 != \"\") {\n        setCof4(text);\n        Keyboard.dismiss();\n      } else {\n        setCof4(text);\n      }\n    }\n  })), React.createElement(View, null, React.createElement(TouchableOpacity, {\n    style: styles.btnC,\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return validarPassword();\n    }\n  }, React.createElement(Text, {\n    style: styles.textCI\n  }, \"CONFIRMAR\"))))));\n};\n\nvar alturaios = Platform.OS === 'ios' ? '11%' : '2%';\nvar paddinrightios = Platform.OS === 'ios' ? 15 : 12;\nvar cuadroios = Platform.OS === 'ios' ? 55 : 45;\nvar styles = StyleSheet.create({\n  body: {\n    height: windowHeight,\n    width: windowWidth\n  },\n  containeruno: {\n    paddingTop: RFValue(35),\n    alignItems: 'center'\n  },\n  logo: {\n    resizeMode: 'contain',\n    width: windowWidth * 0.5,\n    height: windowHeight * 0.2\n  },\n  containerBlanco: {\n    paddingLeft: RFValue(15),\n    paddingRight: RFValue(paddinrightios),\n    marginTop: RFValue(12),\n    alignItems: 'center',\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    height: windowHeight * 0.8,\n    width: windowWidth,\n    backgroundColor: 'white',\n    elevation: 24,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5\n  },\n  imgmano: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: RFValue(20)\n  },\n  logomano: {\n    width: RFValue(110),\n    height: RFValue(110),\n    resizeMode: 'contain'\n  },\n  containerunorama: {\n    flexDirection: 'row'\n  },\n  textuno: {\n    marginTop: RFValue(25),\n    fontSize: RFValue(13),\n    fontWeight: 'bold',\n    color: '#625d5b',\n    fontFamily: 'opensans-regular'\n  },\n  textdos: {\n    marginTop: RFValue(25),\n    fontSize: RFValue(13),\n    fontWeight: 'bold',\n    color: '#625d5b',\n    fontFamily: 'opensans-regular'\n  },\n  TextInput1: {\n    marginTop: RFValue(12),\n    width: RFValue(cuadroios),\n    height: RFValue(cuadroios),\n    borderWidth: 1,\n    borderColor: 'purple',\n    margin: RFValue(5),\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderRadius: 10,\n    fontSize: RFValue(15)\n  },\n  TextInput2: {\n    marginTop: RFValue(12),\n    width: RFValue(cuadroios),\n    height: RFValue(cuadroios),\n    borderWidth: 1,\n    borderColor: 'purple',\n    margin: RFValue(5),\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderRadius: 10,\n    fontSize: RFValue(15)\n  },\n  btnC: {\n    backgroundColor: '#5b298a',\n    alignItems: 'center',\n    paddingLeft: RFValue(80),\n    paddingRight: RFValue(80),\n    paddingTop: RFValue(12),\n    paddingBottom: RFValue(12),\n    borderRadius: 20,\n    marginTop: RFValue(25),\n    elevation: 24,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 8\n  },\n  textCI: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: RFValue(11.5)\n  },\n  bodymodal: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  ventanamodal: {\n    width: windowWidth * 0.95,\n    height: windowHeight * 0.1,\n    backgroundColor: '#5B298A',\n    borderWidth: 0.5,\n    borderColor: 'black',\n    borderRadius: 20,\n    paddingLeft: RFValue(12),\n    paddingRight: RFValue(12),\n    flexDirection: 'row',\n    alignItems: 'center',\n    top: alturaios\n  },\n  icontext: {\n    alignItems: 'center'\n  },\n  textnoti: {},\n  contenedorlottie: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  lottie: {\n    width: 60,\n    height: 60\n  },\n  contenedortext: {\n    justifyContent: 'center'\n  },\n  texticon: {\n    fontSize: RFValue(18),\n    fontWeight: \"bold\",\n    color: 'white'\n  },\n  notificacion: {\n    fontSize: RFValue(12),\n    color: 'white'\n  }\n});\nexport default CodigoVerificacion;","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/src/screens/CodigoVerificacion.tsx"],"names":["React","useEffect","useRef","useState","RFValue","KeyboardAwareScrollView","Animatable","savePassword","LottieView","Font","windowWidth","Dimensions","get","width","windowHeight","height","CodigoVerificacion","navigation","pin1Ref","pin2Ref","pin3Ref","pin4Ref","cof1Ref","cof2Ref","cof3Ref","cof4Ref","pin1","setPin1","pin2","setPin2","pin3","setPin3","pin4","setPin4","cof1","setCof1","cof2","setCof2","cof3","setCof3","cof4","setCof4","anmt","setanmt","incorrectoModal","setIncorrectoModal","vacioModal","setvacioModal","validarPassword","password","navigate","setTimeout","fontsLoaded","setFontsLoaded","loadFonts","loadAsync","require","x","y","styles","body","bodymodal","ventanamodal","icontext","contenedorlottie","lottie","textnoti","contenedortext","texticon","notificacion","containeruno","logo","containerBlanco","imgmano","logomano","textuno","containerunorama","TextInput1","text","current","focus","textdos","TextInput2","Keyboard","dismiss","btnC","textCI","alturaios","Platform","OS","paddinrightios","cuadroios","StyleSheet","create","paddingTop","alignItems","resizeMode","paddingLeft","paddingRight","marginTop","borderTopLeftRadius","borderTopRightRadius","backgroundColor","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","justifyContent","flexDirection","fontSize","fontWeight","color","fontFamily","borderWidth","borderColor","margin","textAlign","borderRadius","paddingBottom","flex","top"],"mappings":"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","sourcesContent":["import React, { Component,useEffect,useRef, useState } from 'react'\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\nimport { Text, StyleSheet, View, Image, Button, Alert, TextInput, TouchableOpacity, Modal, Platform, Dimensions, Keyboard  } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { savePassword } from '../../api';\r\nimport LottieView from 'lottie-react-native';\r\n// Fuente\r\nimport * as Font from 'expo-font'\r\n\r\n\r\nconst windowWidth = Dimensions.get('screen').width;\r\nconst windowHeight = Dimensions.get('screen').height;\r\n\r\nconst CodigoVerificacion = ({navigation}: {navigation: any}) => {\r\n  \r\n        // Referencias para salto input\r\n        const pin1Ref = useRef(null);\r\n        const pin2Ref = useRef(null);\r\n        const pin3Ref = useRef(null);\r\n        const pin4Ref = useRef(null);\r\n\r\n        const cof1Ref = useRef(null)\r\n        const cof2Ref = useRef(null)\r\n        const cof3Ref = useRef(null)\r\n        const cof4Ref = useRef(null)\r\n        //Cambiar estados\r\n        const [pin1, setPin1] = useState(\"\")\r\n        const [pin2, setPin2] = useState(\"\")\r\n        const [pin3, setPin3] = useState(\"\")\r\n        const [pin4, setPin4] = useState(\"\")\r\n    \r\n        const [cof1, setCof1] = useState(\"\")\r\n        const [cof2, setCof2] = useState(\"\")\r\n        const [cof3, setCof3] = useState(\"\")\r\n        const [cof4, setCof4] = useState(\"\")\r\n\r\n\r\n        const [anmt,setanmt]= useState(\"\");\r\n        const [incorrectoModal, setIncorrectoModal] = useState(false);\r\n        const [vacioModal, setvacioModal] = useState(false);\r\n\r\n        function validarPassword() {\r\n            if(pin1 === cof1 && pin2 === cof2 && pin3 === cof3 && pin4 === cof4 && pin1 != \"\" && pin2 != \"\" && pin3 != \"\" && pin4 != \"\"){\r\n                //Entonces breve aqui ya guardariamos el password y pasariamos a al Balance\r\n                //Para guardar el password pues si hay que concatenar pin1+pin2+pin3+pin4 en un solo string\r\n                const password = pin1+pin2+pin3+pin4\r\n                savePassword(password)\r\n                navigation.navigate('PantallaCarga')\r\n            } else if(pin1 == \"\" || pin2 == \"\" || pin3 == \"\" || pin4 == \"\"  || cof1 == \"\" || cof2 == \"\" || cof3 == \"\" || cof4 == \"\") {\r\n                setvacioModal(true);\r\n                setanmt(\"fadeInDownBig\");\r\n                setTimeout( () => {\r\n                    setanmt(\"fadeOutUp\");\r\n                    setTimeout( () => {\r\n                        setvacioModal(false);\r\n                    }, 100 )\r\n                },2000)\r\n            } else {\r\n                //Y aqui pues le dariamos un alert que verifique la password\r\n                setIncorrectoModal(true);\r\n                setanmt(\"fadeInDownBig\");\r\n                setTimeout( () => {\r\n                    setanmt(\"fadeOutUp\");\r\n                    setTimeout( () => {\r\n                        setIncorrectoModal(false);\r\n                    }, 100 )\r\n                },2000)\r\n            }\r\n        }\r\n\r\n    //Función fuentes tipograficas\r\n\r\n    const[fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (!fontsLoaded) {\r\n                loadFonts();\r\n            }\r\n        });\r\n    const loadFonts = async () => {\r\n        await Font.loadAsync({\r\n\r\n            //Fuente\r\n            'opensans-regular': require('../../assets/fonts/OpenSans-Regular.ttf'),           \r\n        });\r\n\r\n        setFontsLoaded(true);\r\n    }\r\n\r\n    if (!fontsLoaded) {\r\n    return(<View/>);\r\n    }\r\n    ///    \r\n        \r\n        return (\r\n        <KeyboardAwareScrollView resetScrollToCoords={{ x: 0, y: 0 }}\r\n        contentContainerStyle={styles.body}\r\n        scrollEnabled={false}>\r\n            <Modal\r\n                visible={incorrectoModal}\r\n                transparent\r\n                onRequestClose={() =>\r\n                    setIncorrectoModal(false)\r\n                }\r\n                hardwareAccelerated\r\n            >\r\n                <Animatable.View animation={anmt} duration= {600}>\r\n                    <View style={styles.bodymodal}>\r\n                        <View style={styles.ventanamodal}>\r\n                            <View style={styles.icontext}>\r\n                                <View style={styles.contenedorlottie}>\r\n                                    <LottieView\r\n                                        style={styles.lottie}\r\n                                        source={require(\"./Lottie/error.json\")}\r\n                                        autoPlay\r\n                                    />\r\n                                </View>\r\n                            </View>   \r\n                            <View style={styles.textnoti}>\r\n                                <View style={styles.contenedortext}>\r\n                                        <Text style={styles.texticon}>Error</Text>\r\n                                </View>\r\n                                <View>\r\n                                    <Text style={styles.notificacion}>Los codigos no coinciden</Text>\r\n                                </View>\r\n                            </View> \r\n                        </View>\r\n                    </View>\r\n                </Animatable.View>         \r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                visible={vacioModal}\r\n                transparent\r\n                onRequestClose={() =>\r\n                    setvacioModal(false)\r\n                }\r\n                hardwareAccelerated\r\n            >\r\n                <Animatable.View animation={anmt} duration= {600}>\r\n                    <View style={styles.bodymodal}>\r\n                        <View style={styles.ventanamodal}>\r\n                            <View style={styles.icontext}>\r\n                                <View style={styles.contenedorlottie}>\r\n                                    <LottieView\r\n                                        style={styles.lottie}\r\n                                        source={require(\"./Lottie/error.json\")}\r\n                                        autoPlay\r\n                                    />\r\n                                </View> \r\n                            </View>   \r\n                            <View style={styles.textnoti}>\r\n                                <View style={styles.contenedortext}>\r\n                                        <Text style={styles.texticon}>Error</Text>\r\n                                </View>\r\n                                <View>\r\n                                    <Text style={styles.notificacion}>Algunos de los campos estan vacios</Text>\r\n                                </View>\r\n                            </View> \r\n                        </View>\r\n                  </View>\r\n                </Animatable.View>         \r\n            </Modal>\r\n\r\n            <View style={styles.containeruno}>\r\n                {/* logo */}\r\n                <Image source={require('./img/logocolor.png')} style={styles.logo} />\r\n                {/* BordeGris */}\r\n                <View style={styles.containerBlanco}>\r\n                    <View style={styles.imgmano}>\r\n                        <Image source={require('./img/logmanito.png')} style={styles.logomano} />\r\n                    </View>\r\n                    \r\n                    {/* Codigo seguridad */}\r\n                    <Text style={styles.textuno} numberOfLines={2}>CREAR CÓDIGO DE SEGURIDAD</Text>\r\n                    <View style={styles.containerunorama}>  \r\n                        <TextInput style={styles.TextInput1} maxLength={1} keyboardType=\"numeric\" \r\n                           ref={pin1Ref}\r\n                           onChangeText={text=>{\r\n                            if(text === \"\") {\r\n                                setPin1(\"\")\r\n                             } else {\r\n                                    text && pin2Ref.current.focus()\r\n                                    setPin1(text);\r\n                               }                               \r\n                            }}\r\n                        />\r\n                        <TextInput style={styles.TextInput1} maxLength={1} keyboardType=\"numeric\" \r\n                            ref={pin2Ref}\r\n                            onChangeText={text=>{\r\n                                if(text === \"\") {\r\n                                    setPin2(\"\")\r\n                                 } else {\r\n                                        text && pin3Ref.current.focus()\r\n                                        setPin2(text);\r\n                                   }                               \r\n                            }}\r\n                        />\r\n                        <TextInput style={styles.TextInput1} maxLength={1} keyboardType=\"numeric\" \r\n                            ref={pin3Ref}\r\n                            onChangeText={text=>{\r\n                                if(text === \"\") {\r\n                                    setPin3(\"\")\r\n                                 } else {\r\n                                        text && pin4Ref.current.focus()\r\n                                        setPin3(text);\r\n                                   }                               \r\n                            }}\r\n                        />\r\n                        <TextInput style={styles.TextInput1} maxLength={1} keyboardType=\"numeric\" \r\n                            ref={pin4Ref}\r\n                            onChangeText={text=>{\r\n                                if(text === \"\") {\r\n                                    setPin4(\"\")\r\n                                 } else {\r\n                                        text && cof1Ref.current.focus()\r\n                                        setPin4(text);\r\n                                   }                               \r\n                            }}\r\n                        />\r\n                    </View>\r\n                    \r\n                    {/* Confirmar codigo */}\r\n                    <Text style={styles.textdos} numberOfLines={2}>CONFIRMAR CÓDIGO DE SEGURIDAD</Text>\r\n                    \r\n                    <View style={styles.containerunorama}>\r\n                        <TextInput style={styles.TextInput2} maxLength={1} keyboardType=\"numeric\"\r\n                            ref={cof1Ref}\r\n                            onChangeText={text=>{\r\n                                if(text === \"\") {\r\n                                    setCof1(\"\")\r\n                                 } else {\r\n                                        text && cof2Ref.current.focus()\r\n                                        setCof1(text);\r\n                                   }                               \r\n                            }}\r\n                        />\r\n                        <TextInput style={styles.TextInput2} maxLength={1} keyboardType=\"numeric\"\r\n                            ref={cof2Ref}\r\n                            onChangeText={text=>{\r\n                                if(text === \"\") {\r\n                                    setCof2(\"\")\r\n                                 } else {\r\n                                        text && cof3Ref.current.focus()\r\n                                        setCof2(text);\r\n                                   }                               \r\n                            }}\r\n                        />\r\n                        <TextInput style={styles.TextInput2} maxLength={1} keyboardType=\"numeric\"\r\n                            ref={cof3Ref}\r\n                            onChangeText={text=>{\r\n                                if(text === \"\") {\r\n                                    setCof3(\"\")\r\n                                 } else {\r\n                                        text && cof4Ref.current.focus()\r\n                                        setCof3(text);\r\n                                   }                               \r\n                            }}\r\n                        />\r\n                        <TextInput style={styles.TextInput2} maxLength={1} keyboardType=\"numeric\"\r\n                            ref={cof4Ref}\r\n                            onChangeText={text =>{  \r\n                                if(text === \"\") {\r\n                                   setCof4(text)\r\n                                }  else if(text != \"\" && pin1 != \"\" && pin2 != \"\" && pin3 != \"\" && pin4 != \"\" && cof1 != \"\" && cof2 != \"\" && cof3 != \"\") {\r\n                                    setCof4(text) \r\n                                    Keyboard.dismiss()\r\n                                }  else {\r\n                                    setCof4(text)\r\n                                }                                                  \r\n                            }} \r\n                        />                    \r\n                    </View>\r\n                    \r\n                    <View>\r\n                        <TouchableOpacity\r\n                            style={styles.btnC}\r\n                            activeOpacity={0.9}\r\n                            onPress={() => validarPassword()}\r\n                        >\r\n                            <Text style={styles.textCI}>CONFIRMAR</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>            \r\n\r\n        </KeyboardAwareScrollView>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\nconst alturaios = Platform.OS === 'ios' ? '11%' : '2%';\r\nconst paddinrightios = Platform.OS === 'ios' ? 15 : 12;\r\nconst cuadroios = Platform.OS === 'ios' ? 55 : 45;\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n        height: windowHeight,\r\n        width: windowWidth,\r\n    },\r\n    containeruno: {\r\n        paddingTop: RFValue(35),\r\n        alignItems:'center',\r\n    },\r\n    logo: {\r\n        resizeMode: 'contain',\r\n        width: windowWidth*0.5,\r\n        height: windowHeight*0.2\r\n    },\r\n    containerBlanco: {\r\n        paddingLeft: RFValue(15),\r\n        paddingRight: RFValue(paddinrightios),\r\n        marginTop: RFValue(12),\r\n        alignItems: 'center',\r\n        borderTopLeftRadius: 25,\r\n        borderTopRightRadius: 25,\r\n        height: windowHeight*0.8,\r\n        width: windowWidth,\r\n        backgroundColor: 'white',\r\n        elevation:24,\r\n        shadowColor: '#000',\r\n        shadowOffset: {width: 0, height: 0},\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 5,    \r\n    },\r\n    imgmano: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop:RFValue(20),\r\n    },\r\n    logomano: {\r\n        width: RFValue(110), \r\n        height: RFValue(110),\r\n        resizeMode: 'contain',\r\n    },\r\n    containerunorama: {\r\n        flexDirection: 'row',\r\n    },\r\n    textuno: {\r\n        marginTop: RFValue(25),\r\n        fontSize:RFValue(13),\r\n        fontWeight: 'bold',\r\n        color: '#625d5b',\r\n        fontFamily:'opensans-regular'\r\n    }, \r\n    textdos: {\r\n        marginTop: RFValue(25),\r\n        fontSize:RFValue(13),\r\n        fontWeight: 'bold',\r\n        color: '#625d5b',\r\n        fontFamily:'opensans-regular'\r\n    },\r\n    TextInput1: {\r\n        marginTop: RFValue(12),\r\n        width: RFValue(cuadroios),\r\n        height: RFValue(cuadroios), \r\n        borderWidth: 1,\r\n        borderColor: 'purple',\r\n        margin: RFValue(5),\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        borderRadius: 10,\r\n        fontSize:RFValue(15),\r\n    },\r\n    TextInput2: {\r\n        marginTop: RFValue(12),\r\n        width: RFValue(cuadroios),\r\n        height: RFValue(cuadroios), \r\n        borderWidth: 1,\r\n        borderColor: 'purple',\r\n        margin: RFValue(5),\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        borderRadius: 10,\r\n        fontSize:RFValue(15),\r\n    },\r\n    btnC:{\r\n        backgroundColor:'#5b298a',\r\n        alignItems:'center',\r\n        paddingLeft: RFValue(80),\r\n        paddingRight: RFValue(80),\r\n        paddingTop: RFValue(12),\r\n        paddingBottom: RFValue(12),\r\n        borderRadius: 20,\r\n        marginTop: RFValue(25),\r\n        elevation:24,\r\n        shadowColor: '#000',\r\n        shadowOffset: {width: 0, height: 0},\r\n        shadowOpacity: 0.5,\r\n        shadowRadius: 8,\r\n    },\r\n    textCI:{\r\n        color:'white',\r\n        fontWeight: 'bold',\r\n        fontSize:RFValue(11.5),\r\n    },\r\n\r\n\r\n    //Modal\r\n    bodymodal: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    ventanamodal: {\r\n        width: windowWidth*0.95,\r\n        height: windowHeight*0.1,\r\n        backgroundColor: '#5B298A',\r\n        borderWidth: 0.5,\r\n        borderColor: 'black',\r\n        borderRadius: 20,\r\n        paddingLeft:RFValue(12),\r\n        paddingRight:RFValue(12),\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        top:alturaios\r\n    },\r\n    icontext: {\r\n        alignItems: 'center',\r\n    },\r\n    textnoti: {\r\n\r\n    },\r\n    contenedorlottie:{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    lottie: {\r\n        width:60,\r\n        height:60,\r\n    },\r\n    contenedortext: {\r\n        justifyContent: 'center',\r\n    },\r\n    texticon: {\r\n        fontSize:RFValue(18),\r\n        fontWeight: \"bold\",\r\n        color:'white'\r\n    },\r\n    notificacion:{\r\n        fontSize:RFValue(12),\r\n        color:'white'\r\n    },\r\n})\r\nexport default CodigoVerificacion"]},"metadata":{},"sourceType":"module"}