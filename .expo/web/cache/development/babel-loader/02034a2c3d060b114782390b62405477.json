{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getBalance, getToken, readPublicKey } from \"../../api\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport * as Font from 'expo-font';\nvar windowWidth = Dimensions.get('screen').width;\nvar windowHeight = Dimensions.get('screen').height;\n\nvar Balance = function Balance(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    var backHandler = BackHandler.addEventListener('hardwareBackPress', function () {\n      return true;\n    });\n    return function () {\n      return backHandler.remove();\n    };\n  }, []);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      balance = _useState2[0],\n      setBalance = _useState2[1];\n\n  function obtenerBalance(publicKey) {\n    return _regeneratorRuntime.async(function obtenerBalance$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getBalance(publicKey).then(function (value) {\n              console.log(value);\n              setBalance(value);\n            }).catch(function (error) {\n              console.log(error);\n              return \"error\";\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tokenBalance = _useState4[0],\n      setTokenBalance = _useState4[1];\n\n  function obtenerTokenB(publicKey, mint) {\n    var bala;\n    return _regeneratorRuntime.async(function obtenerTokenB$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            bala = getToken(publicKey, mint).then(function (value) {\n              setTokenBalance(value);\n              console.log(value);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pKey = _useState6[0],\n      setPKey = _useState6[1];\n\n  readPublicKey().then(function (val) {\n    console.log(\"PUBLIC KEY:\");\n    console.log(val);\n    setPKey(val);\n  });\n  useEffect(function () {\n    obtenerTokenB(pKey, \"7TMzmUe9NknkeS3Nxcx6esocgyj8WdKyEMny9myDGDYJ\");\n    obtenerBalance(pKey);\n  });\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fontsLoaded = _useState8[0],\n      setFontsLoaded = _useState8[1];\n\n  useEffect(function () {\n    if (!fontsLoaded) {\n      loadFonts();\n    }\n  });\n\n  var loadFonts = function loadFonts() {\n    return _regeneratorRuntime.async(function loadFonts$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync({\n              'opensans-regular': require(\"../../assets/fonts/OpenSans-Regular.ttf\")\n            }));\n\n          case 2:\n            setFontsLoaded(true);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!fontsLoaded) {\n    return React.createElement(View, null);\n  }\n\n  return React.createElement(View, {\n    style: styles.body\n  }, React.createElement(ImageBackground, {\n    source: require(\"./img/fondo.png\"),\n    style: styles.fondo\n  }, React.createElement(View, {\n    style: styles.containeruno\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"./img/logoblanco.png\")\n  }), React.createElement(Text, {\n    style: styles.txtbalance\n  }, balance), React.createElement(View, {\n    style: styles.dcER\n  }, React.createElement(View, {\n    style: styles.dcR\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnR,\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return navigation.navigate('Recibir');\n    }\n  }, React.createElement(Text, {\n    style: styles.textbtnR\n  }, \"RECIBIR\"))), React.createElement(View, {\n    style: styles.dcE\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnR,\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return navigation.navigate('Enviar');\n    }\n  }, React.createElement(Text, {\n    style: styles.textbtnR\n  }, \"ENVIAR\")))), React.createElement(View, {\n    style: styles.balancecry\n  }, React.createElement(View, {\n    style: styles.tablacry\n  }, React.createElement(View, {\n    style: styles.logocry\n  }, React.createElement(Image, {\n    style: styles.imgcry,\n    source: require(\"./img/billeteras/logocondor.png\")\n  })), React.createElement(View, {\n    style: styles.nombrecry\n  }, React.createElement(Text, {\n    style: styles.ntxtcry\n  }, \"CONDORCOIN\")), React.createElement(View, {\n    style: styles.smcry\n  }, React.createElement(View, {\n    style: styles.saldocry\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.stxtcry\n  }, tokenBalance)), React.createElement(View, {\n    style: styles.monedacry\n  }, React.createElement(Text, {\n    style: styles.mtxtcry\n  }, \"CNDR\")))), React.createElement(View, {\n    style: styles.tablacry\n  }, React.createElement(View, {\n    style: styles.logocry\n  }, React.createElement(Image, {\n    style: styles.imgcry,\n    source: require(\"./img/billeteras/solana.png\")\n  })), React.createElement(View, {\n    style: styles.nombrecry\n  }, React.createElement(Text, {\n    style: styles.ntxtcry\n  }, \"SOLANA\")), React.createElement(View, {\n    style: styles.smcry\n  }, React.createElement(View, {\n    style: styles.saldocry\n  }, React.createElement(Text, {\n    style: styles.stxtcry\n  }, balance)), React.createElement(View, {\n    style: styles.monedacry\n  }, React.createElement(Text, {\n    style: styles.mtxtcry\n  }, \"SOL\"))))))));\n};\n\nvar alturaios = Platform.OS === 'ios' ? '11%' : '2%';\nvar paddinrightios = Platform.OS === 'ios' ? 15 : 12;\nvar styles = StyleSheet.create({\n  body: {\n    height: windowHeight,\n    width: windowWidth\n  },\n  containeruno: {\n    paddingTop: RFValue(35),\n    paddingLeft: RFValue(15),\n    paddingRight: RFValue(paddinrightios),\n    alignItems: 'center'\n  },\n  fondo: {\n    height: windowHeight,\n    width: windowWidth,\n    margin: 0,\n    resizeMode: 'contain'\n  },\n  logo: {\n    resizeMode: 'contain',\n    width: windowWidth * 0.5,\n    height: windowHeight * 0.2\n  },\n  txtbalance: {\n    fontSize: RFValue(45),\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  dcER: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    padding: RFValue(15),\n    borderRadius: 10,\n    marginTop: RFValue(5)\n  },\n  dcR: {\n    width: '50%'\n  },\n  dcE: {\n    width: '50%'\n  },\n  btnR: {\n    backgroundColor: '#5b298a',\n    alignItems: 'center',\n    marginRight: RFValue(15),\n    marginLeft: RFValue(15),\n    paddingTop: RFValue(12),\n    paddingBottom: RFValue(12),\n    borderRadius: 20,\n    elevation: 24,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 8\n  },\n  textbtnR: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: RFValue(11.5)\n  },\n  balancecry: {\n    backgroundColor: 'white',\n    marginTop: RFValue(15),\n    borderTopRightRadius: 20,\n    borderTopLeftRadius: 20,\n    padding: RFValue(10),\n    height: windowHeight * 0.7\n  },\n  tablacry: {\n    marginTop: RFValue(10),\n    borderWidth: 0.8,\n    borderColor: '#e0e0e0',\n    borderRadius: 10,\n    height: windowHeight * 0.08,\n    flexDirection: 'row',\n    paddingLeft: RFValue(10),\n    paddingRight: RFValue(12)\n  },\n  logocry: {\n    width: '15%',\n    justifyContent: 'center'\n  },\n  imgcry: {\n    width: windowWidth * 0.12,\n    height: windowHeight * 0.12,\n    resizeMode: 'contain'\n  },\n  nombrecry: {\n    width: '40%',\n    justifyContent: 'center',\n    paddingLeft: RFValue(8)\n  },\n  ntxtcry: {\n    fontWeight: 'bold',\n    fontSize: RFValue(14),\n    color: '#8d8c8c',\n    fontFamily: 'opensans-regular'\n  },\n  smcry: {\n    width: '45%',\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  saldocry: {\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  stxtcry: {\n    fontSize: RFValue(18),\n    color: '#8d8c8c'\n  },\n  monedacry: {\n    justifyContent: 'center'\n  },\n  mtxtcry: {\n    fontFamily: 'Roboto',\n    fontSize: RFValue(13),\n    color: '#8d8c8c'\n  }\n});\nexport default Balance;","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/src/screens/Balance.tsx"],"names":["React","useState","useEffect","getBalance","getToken","readPublicKey","RFValue","Font","windowWidth","Dimensions","get","width","windowHeight","height","Balance","navigation","backHandler","BackHandler","addEventListener","remove","balance","setBalance","obtenerBalance","publicKey","then","value","console","log","catch","error","tokenBalance","setTokenBalance","obtenerTokenB","mint","bala","pKey","setPKey","val","fontsLoaded","setFontsLoaded","loadFonts","loadAsync","require","styles","body","fondo","containeruno","logo","txtbalance","dcER","dcR","btnR","navigate","textbtnR","dcE","balancecry","tablacry","logocry","imgcry","nombrecry","ntxtcry","smcry","saldocry","stxtcry","monedacry","mtxtcry","alturaios","Platform","OS","paddinrightios","StyleSheet","create","paddingTop","paddingLeft","paddingRight","alignItems","margin","resizeMode","fontSize","color","fontWeight","flexDirection","backgroundColor","padding","borderRadius","marginTop","marginRight","marginLeft","paddingBottom","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderTopRightRadius","borderTopLeftRadius","borderWidth","borderColor","justifyContent","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {  Dimensions,ImageBackground,StyleSheet, Text, View,TouchableOpacity, Image,Button , Alert, BackHandler, Linking, Platform } from 'react-native'\r\nimport { generateMnemonic, mnemonicToSeed, createAccount, getBalance, getToken,sendTokenTransaction,readPublicKey } from '../../api';\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Pressable, Hoverable, ScrollView } from \"react-native-web-hover\";\r\nimport { TextInput } from 'react-native-element-textinput';\r\nimport * as Animatable from 'react-native-animatable';\r\n// Fuente\r\nimport * as Font from 'expo-font'\r\n\r\nconst windowWidth = Dimensions.get('screen').width;\r\nconst windowHeight = Dimensions.get('screen').height;\r\n\r\n\r\n\r\nconst Balance = ({navigation}: {navigation: any}) => {\r\n\r\n    useEffect(() => {\r\n        const backHandler = BackHandler.addEventListener('hardwareBackPress', () => true)\r\n        return () => backHandler.remove()\r\n      }, [])\r\n\r\n    //Funcion obtener balance\r\n    const [balance, setBalance] = useState(0)\r\n\r\n    async function obtenerBalance(publicKey: string) {\r\n        getBalance(publicKey).then((value) => {\r\n        console.log(value)\r\n        setBalance(value)\r\n        }).catch((error) => {\r\n        console.log(error);\r\n        return \"error\"\r\n        })\r\n    }\r\n\r\n    //value textinput\r\n\r\n    //Funcion de obtener splToken\r\n  const [tokenBalance, setTokenBalance] = useState(0)\r\n\r\n  async function obtenerTokenB(publicKey:string, mint:string) {\r\n    const bala = getToken(publicKey, mint).then((value) => {\r\n      setTokenBalance(value)\r\n      console.log(value);\r\n    })\r\n  }\r\n\r\n//funcion obtener llave publica\r\nconst [pKey,setPKey] = useState(\"\")\r\nreadPublicKey().then((val)=>{\r\n    console.log(\"PUBLIC KEY:\");\r\n    console.log(val);\r\n    \r\n    setPKey(val)\r\n})\r\n\r\nuseEffect(()=>{\r\n\r\n    //obtener balance del token\r\n    obtenerTokenB(pKey,\"7TMzmUe9NknkeS3Nxcx6esocgyj8WdKyEMny9myDGDYJ\")\r\n    //obtener balance solanas\r\n    obtenerBalance(pKey)\r\n\r\n})\r\n    //Función fuentes tipograficas\r\n\r\n    const[fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (!fontsLoaded) {\r\n                loadFonts();\r\n            }\r\n        });\r\n    const loadFonts = async () => {\r\n        await Font.loadAsync({\r\n\r\n            //Fuente\r\n            'opensans-regular': require('../../assets/fonts/OpenSans-Regular.ttf'),           \r\n        });\r\n\r\n        setFontsLoaded(true);\r\n    }\r\n\r\n    if (!fontsLoaded) {\r\n    return(<View/>);\r\n    }\r\n    ///\r\n\r\n    return (\r\n        <View style={styles.body}>\r\n            <ImageBackground source={require('./img/fondo.png')} style={styles.fondo} >\r\n                <View style={styles.containeruno}>\r\n                    <Image style={styles.logo} source={require('./img/logoblanco.png')}  />\r\n\r\n      \r\n                    <Text style={styles.txtbalance}>{balance}</Text>\r\n\r\n                    {/* <View style={styles.doscolumnasB} >\r\n\r\n                    <View style={styles.doscolumnasB} >\r\n\r\n                        <View style={styles.columnaunoB}>\r\n                            <Text style={styles.txtinferiorL}></Text>\r\n                        </View>\r\n                        <View style={styles.columnadosB}>\r\n                            <Text style={styles.txtinferiorR}></Text>\r\n                        </View>\r\n                    </View> */}\r\n                    {/* Cuadro recibir y enviar */}\r\n                    <View style={styles.dcER}>\r\n                        <View style={styles.dcR}>\r\n                            <TouchableOpacity style=\r\n                            {styles.btnR} \r\n                            activeOpacity={0.9} \r\n                            onPress={() => navigation.navigate('Recibir')}\r\n                            >\r\n                                <Text style={styles.textbtnR}>RECIBIR</Text> \r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <View style={styles.dcE}>\r\n                            <TouchableOpacity style=\r\n                            {styles.btnR} \r\n                            activeOpacity={0.9} \r\n                            onPress={() => navigation.navigate('Enviar')}\r\n                            >\r\n                                <Text style={styles.textbtnR}>ENVIAR</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n\r\n                    {/* tabla de criptos */}\r\n                    <View style={styles.balancecry}>\r\n                        <View style={styles.tablacry} >\r\n                            <View style={styles.logocry}>\r\n                                <Image style={styles.imgcry} source={require('./img/billeteras/logocondor.png')}  />\r\n                            </View>\r\n                            <View style={styles.nombrecry}>\r\n                                <Text style={styles.ntxtcry}>CONDORCOIN</Text>\r\n                            </View>\r\n                            <View style={styles.smcry}>\r\n                                <View style={styles.saldocry}>\r\n                                    \r\n                                    <Text numberOfLines={1} style={styles.stxtcry} >{tokenBalance}</Text>\r\n                                </View>\r\n                                \r\n                                <View style={styles.monedacry}>\r\n                                    <Text style={styles.mtxtcry}>CNDR</Text>\r\n                                </View>\r\n                            </View>                           \r\n                        </View>  \r\n\r\n\r\n                        <View style={styles.tablacry} >\r\n                            <View style={styles.logocry}>\r\n                                <Image style={styles.imgcry} source={require('./img/billeteras/solana.png')}  />\r\n                            </View>\r\n                            <View style={styles.nombrecry}>\r\n                                <Text style={styles.ntxtcry}>SOLANA</Text>\r\n                            </View>\r\n                            <View style={styles.smcry}>\r\n                                <View style={styles.saldocry}>\r\n                                    <Text style={styles.stxtcry}>{balance}</Text>\r\n                                </View>\r\n                                <View style={styles.monedacry}>\r\n                                    <Text style={styles.mtxtcry}>SOL</Text>\r\n                                </View>\r\n                            </View>                           \r\n                        </View>\r\n                    </View>\r\n                </View>             \r\n            </ImageBackground>   \r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst alturaios = Platform.OS === 'ios' ? '11%' : '2%';\r\nconst paddinrightios = Platform.OS === 'ios' ? 15 : 12;\r\nconst styles = StyleSheet.create({\r\n    body:{\r\n        height: windowHeight,\r\n        width: windowWidth,\r\n    },\r\n    containeruno:{\r\n        paddingTop: RFValue(35),\r\n        paddingLeft: RFValue(15),\r\n        paddingRight: RFValue(paddinrightios),\r\n        alignItems:'center',\r\n    },\r\n    fondo:{\r\n        height: windowHeight,\r\n        width: windowWidth,\r\n        margin:0,\r\n        resizeMode: 'contain',\r\n    },\r\n    logo:{\r\n        resizeMode: 'contain',\r\n        width: windowWidth*0.5,\r\n        height: windowHeight*0.2\r\n    },\r\n    txtbalance:{\r\n        fontSize:RFValue(45),\r\n        color:'white',\r\n        fontWeight:'bold',\r\n    },\r\n    // doscolumnasB:{\r\n    //     flexDirection: 'row',\r\n    //     width: windowWidth,\r\n    // },\r\n    // columnaunoB: {\r\n    //     width:'50%',\r\n    //     alignItems:'flex-end',\r\n    // },\r\n    // columnadosB: {\r\n    //     alignItems:'center',\r\n    //     width:'12%',\r\n    //     borderRadius: 8,\r\n    //     // paddingLeft: '2%',\r\n    //     // paddingRight: '2%',\r\n    // },\r\n    // txtinferiorL:{\r\n    //     fontFamily:'Roboto',\r\n    //     color:'white',\r\n    //     fontSize:RFPercentage(2.5),\r\n    //     fontWeight:'bold',\r\n    //     paddingLeft: '3%',\r\n    //     paddingRight: '3%',\r\n    // },\r\n    // txtinferiorR:{\r\n    //     fontFamily:'Roboto',\r\n    //     color:'white',\r\n    //     fontSize:RFPercentage(2.5),\r\n    //     fontWeight:'bold',\r\n    // },\r\n    dcER:{\r\n        flexDirection: 'row',\r\n        backgroundColor: 'white',\r\n        padding: RFValue(15),\r\n        borderRadius: 10,\r\n        marginTop: RFValue(5),\r\n    },\r\n    dcR:{\r\n        width: '50%',\r\n    },\r\n    dcE:{\r\n        width:'50%',\r\n    },\r\n    btnR:{\r\n        backgroundColor:'#5b298a',\r\n        alignItems:'center',\r\n        marginRight: RFValue(15),\r\n        marginLeft: RFValue(15),\r\n        paddingTop: RFValue(12),\r\n        paddingBottom: RFValue(12),\r\n        borderRadius: 20,\r\n        elevation:24,\r\n        shadowColor: '#000',\r\n        shadowOffset: {width: 0, height: 0},\r\n        shadowOpacity: 0.5,\r\n        shadowRadius: 8,\r\n    },\r\n    textbtnR:{\r\n        color:'white',\r\n        fontWeight: 'bold',\r\n        fontSize:RFValue(11.5),\r\n    },\r\n    balancecry:{\r\n        backgroundColor:'white',\r\n        marginTop: RFValue(15),\r\n        borderTopRightRadius: 20,\r\n        borderTopLeftRadius: 20,\r\n        padding: RFValue(10),\r\n        height: windowHeight*0.7,\r\n    },\r\n    tablacry:{\r\n        marginTop:RFValue(10),\r\n        borderWidth: 0.8,\r\n        borderColor: '#e0e0e0',\r\n        borderRadius:10,\r\n        height: windowHeight*0.08,\r\n        flexDirection:'row',\r\n        paddingLeft: RFValue(10),\r\n        paddingRight: RFValue(12),\r\n    },\r\n    logocry:{\r\n        width:'15%',\r\n        justifyContent: 'center',\r\n    },\r\n    imgcry:{\r\n        width: windowWidth*0.12,\r\n        height: windowHeight*0.12,\r\n        resizeMode: 'contain',\r\n    },\r\n    nombrecry:{\r\n        width:'40%',\r\n        justifyContent: 'center',\r\n        paddingLeft: RFValue(8),\r\n    },\r\n    ntxtcry:{\r\n        fontWeight: 'bold',\r\n        fontSize:RFValue(14),\r\n        color: '#8d8c8c',\r\n        fontFamily: 'opensans-regular'\r\n    },\r\n    smcry:{\r\n        width:'45%',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'center',\r\n    },\r\n    saldocry:{\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-end',\r\n    },\r\n    stxtcry:{\r\n        fontSize:RFValue(18),\r\n        color: '#8d8c8c',\r\n    },\r\n    monedacry:{\r\n        justifyContent: 'center',\r\n    },\r\n    mtxtcry:{\r\n        fontFamily: 'Roboto',\r\n        fontSize:RFValue(13),\r\n        color: '#8d8c8c',\r\n    },\r\n})\r\nexport default Balance"]},"metadata":{},"sourceType":"module"}