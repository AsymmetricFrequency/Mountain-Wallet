{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getBalance } from \"../../api\";\nimport { RFPercentage } from \"react-native-responsive-fontsize\";\n\nvar Balance = function Balance() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      balance = _useState2[0],\n      setBalance = _useState2[1];\n\n  function obtenerBalance(publicKey) {\n    return _regeneratorRuntime.async(function obtenerBalance$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getBalance(publicKey).then(function (value) {\n              console.log(value);\n              setBalance(value);\n            }).catch(function (error) {\n              console.log(error);\n              return \"error\";\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  obtenerBalance(\"uja3w9XG1g6DQSVT6YASK99FVmdVwXoHVoQEgtEJdLv\");\n  return React.createElement(View, {\n    style: styles.body\n  }, React.createElement(ImageBackground, {\n    source: require(\"./img/fondo.png\"),\n    style: styles.fondo\n  }, React.createElement(View, {\n    style: styles.containeruno\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"./img/logoblanco.png\")\n  }), React.createElement(Text, {\n    style: styles.txtbalance\n  }, \"$ \", balance, \"...\"), React.createElement(View, {\n    style: styles.doscolumnasB\n  }, React.createElement(View, {\n    style: styles.columnaunoB\n  }, React.createElement(Text, {\n    style: styles.txtinferiorL\n  }, \"+0.00\")), React.createElement(View, {\n    style: styles.columnadosB\n  }, React.createElement(Text, {\n    style: styles.txtinferiorR\n  }, \"0%\"))), React.createElement(View, {\n    style: styles.dcER\n  }, React.createElement(View, {\n    style: styles.dcR\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnR,\n    activeOpacity: 0.9\n  }, React.createElement(Text, {\n    style: styles.textbtnR\n  }, \"RECIBIR\"))), React.createElement(View, {\n    style: styles.dcE\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnR,\n    activeOpacity: 0.9\n  }, React.createElement(Text, {\n    style: styles.textbtnR\n  }, \"ENVIAR\")))), React.createElement(View, {\n    style: styles.balancecry\n  }, React.createElement(View, {\n    style: styles.tablacry\n  }, React.createElement(View, {\n    style: styles.logocry\n  }, React.createElement(Image, {\n    style: styles.imgcry,\n    source: require(\"./img/billeteras/logocondor.png\")\n  })), React.createElement(View, {\n    style: styles.nombrecry\n  }, React.createElement(Text, {\n    style: styles.ntxtcry\n  }, \"CONDORCOIN\")), React.createElement(View, {\n    style: styles.smcry\n  }, React.createElement(View, {\n    style: styles.saldocry\n  }, React.createElement(Text, {\n    style: styles.stxtcry\n  }, \"1000\")), React.createElement(View, {\n    style: styles.monedacry\n  }, React.createElement(Text, {\n    style: styles.mtxtcry\n  }, \"CNDR\")))), React.createElement(View, {\n    style: styles.tablacry\n  }, React.createElement(View, {\n    style: styles.logocry\n  }, React.createElement(Image, {\n    style: styles.imgcry,\n    source: require(\"./img/billeteras/solana.png\")\n  })), React.createElement(View, {\n    style: styles.nombrecry\n  }, React.createElement(Text, {\n    style: styles.ntxtcry\n  }, \"SOLANA\")), React.createElement(View, {\n    style: styles.smcry\n  }, React.createElement(View, {\n    style: styles.saldocry\n  }, React.createElement(Text, {\n    style: styles.stxtcry\n  }, \"2000\")), React.createElement(View, {\n    style: styles.monedacry\n  }, React.createElement(Text, {\n    style: styles.mtxtcry\n  }, \"SOL\"))))))));\n};\n\nvar styles = StyleSheet.create({\n  body: {\n    width: '100%',\n    height: '100%',\n    flex: 1\n  },\n  containeruno: {\n    paddingTop: '8%',\n    paddingLeft: '5%',\n    paddingRight: '4%',\n    alignItems: 'center'\n  },\n  fondo: {\n    flex: 1,\n    resizeMode: 'contain'\n  },\n  logo: {\n    width: 180,\n    height: 180,\n    resizeMode: 'contain'\n  },\n  txtbalance: {\n    fontFamily: 'Roboto',\n    fontSize: RFPercentage(5),\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  doscolumnasB: {\n    flexDirection: 'row',\n    width: '100%'\n  },\n  columnaunoB: {\n    width: '50%',\n    alignItems: 'flex-end'\n  },\n  columnadosB: {\n    alignItems: 'flex-start',\n    width: '50%'\n  },\n  txtinferiorL: {\n    fontFamily: 'Roboto',\n    color: 'white',\n    fontSize: RFPercentage(3),\n    fontWeight: 'bold',\n    paddingLeft: '3%',\n    paddingRight: '3%'\n  },\n  txtinferiorR: {\n    fontFamily: 'Roboto',\n    color: 'white',\n    fontSize: RFPercentage(3),\n    fontWeight: 'bold',\n    backgroundColor: '#923085',\n    paddingLeft: '3%',\n    paddingRight: '3%',\n    borderRadius: 10\n  },\n  dcER: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    marginTop: '5%'\n  },\n  dcR: {\n    fontFamily: 'Roboto',\n    width: '50%'\n  },\n  dcE: {\n    fontFamily: 'Roboto',\n    width: '50%'\n  },\n  btnR: {\n    backgroundColor: '#5b298a',\n    alignItems: 'center',\n    marginRight: '10%',\n    marginLeft: '10%',\n    paddingTop: '8%',\n    paddingBottom: '8%',\n    borderRadius: 20\n  },\n  textbtnR: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: RFPercentage(2)\n  },\n  balancecry: {\n    backgroundColor: 'white',\n    width: '100%',\n    height: '100%',\n    marginTop: '3%',\n    borderTopRightRadius: 20,\n    borderTopLeftRadius: 20,\n    padding: '2%'\n  },\n  tablacry: {\n    marginTop: '4%',\n    borderWidth: 0.8,\n    borderColor: '#e0e0e0',\n    borderRadius: 10,\n    height: '5.8%',\n    flexDirection: 'row',\n    paddingLeft: '2.5%',\n    paddingRight: '3.5%',\n    paddingTop: '0%'\n  },\n  logocry: {\n    width: '15%',\n    justifyContent: 'center'\n  },\n  imgcry: {\n    width: 50,\n    height: 50,\n    resizeMode: 'contain'\n  },\n  nombrecry: {\n    width: '45%',\n    justifyContent: 'center',\n    paddingLeft: '2%'\n  },\n  ntxtcry: {\n    fontFamily: 'Roboto',\n    fontWeight: 'bold',\n    fontSize: RFPercentage(2.3),\n    color: '#8d8c8c'\n  },\n  smcry: {\n    width: '40%',\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  saldocry: {\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  stxtcry: {\n    fontFamily: 'Roboto',\n    fontSize: RFPercentage(3),\n    color: '#8d8c8c'\n  },\n  monedacry: {\n    justifyContent: 'center'\n  },\n  mtxtcry: {\n    fontFamily: 'Roboto',\n    fontSize: RFPercentage(1.8),\n    color: '#8d8c8c'\n  }\n});\nexport default Balance;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Proyectos/WalletRN/Mountain-Wallet/src/screens/Balance.tsx"],"names":["React","useState","getBalance","RFPercentage","Balance","balance","setBalance","obtenerBalance","publicKey","then","value","console","log","catch","error","styles","body","require","fondo","containeruno","logo","txtbalance","doscolumnasB","columnaunoB","txtinferiorL","columnadosB","txtinferiorR","dcER","dcR","btnR","textbtnR","dcE","balancecry","tablacry","logocry","imgcry","nombrecry","ntxtcry","smcry","saldocry","stxtcry","monedacry","mtxtcry","StyleSheet","create","width","height","flex","paddingTop","paddingLeft","paddingRight","alignItems","resizeMode","fontFamily","fontSize","color","fontWeight","flexDirection","backgroundColor","borderRadius","padding","marginTop","marginRight","marginLeft","paddingBottom","borderTopRightRadius","borderTopLeftRadius","borderWidth","borderColor","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAA0DC,UAA1D;AACA,SAASC,YAAT,QAAsC,kCAAtC;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAGlB,kBAA8BH,QAAQ,CAAC,CAAD,CAAtC;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,WAAeC,cAAf,CAA8BC,SAA9B;AAAA;AAAA;AAAA;AAAA;AACIN,YAAAA,UAAU,CAACM,SAAD,CAAV,CAAsBC,IAAtB,CAA2B,UAACC,KAAD,EAAW;AACtCC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAJ,cAAAA,UAAU,CAACI,KAAD,CAAV;AACC,aAHD,EAGGG,KAHH,CAGS,UAACC,KAAD,EAAW;AACpBH,cAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,qBAAO,OAAP;AACC,aAND;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAP,EAAAA,cAAc,CAAC,6CAAD,CAAd;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC;AAApB,KACI,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEC,OAAO,mBAAhC;AAAqD,IAAA,KAAK,EAAEF,MAAM,CAACG;AAAnE,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAArB;AAA2B,IAAA,MAAM,EAAEH,OAAO;AAA1C,IADJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACM;AAApB,WAAmChB,OAAnC,QAHJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACO;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS;AAApB,aADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW;AAApB,UADJ,CAJJ,CALJ,EAcI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa;AAApB,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEb,MAAM,CAACc,IAAhC;AAAuC,IAAA,aAAa,EAAE;AAAtD,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe;AAApB,eADJ,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB;AAApB,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEhB,MAAM,CAACc,IAAhC;AAAsC,IAAA,aAAa,EAAE;AAArD,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe;AAApB,cADJ,CADJ,CANJ,CAdJ,EA2BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACiB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACkB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB;AAApB,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEnB,MAAM,CAACoB,MAArB;AAA6B,IAAA,MAAM,EAAElB,OAAO;AAA5C,IADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACqB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,kBADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACuB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACyB;AAApB,YADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAAC0B;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,MAAM,CAAC2B;AAApB,YADJ,CAJJ,CAPJ,CADJ,EAmBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAACkB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB;AAApB,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEnB,MAAM,CAACoB,MAArB;AAA6B,IAAA,MAAM,EAAElB,OAAO;AAA5C,IADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACqB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,cADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACuB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACyB;AAApB,YADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAAC0B;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,MAAM,CAAC2B;AAApB,WADJ,CAJJ,CAPJ,CAnBJ,CA3BJ,CADJ,CADJ,CADJ;AAsEH,CA3FD;;AA8FA,IAAM3B,MAAM,GAAG4B,UAAU,CAACC,MAAX,CAAkB;AAC7B5B,EAAAA,IAAI,EAAE;AACF6B,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,MAAM,EAAE,MAFN;AAGFC,IAAAA,IAAI,EAAE;AAHJ,GADuB;AAM7B5B,EAAAA,YAAY,EAAC;AACT6B,IAAAA,UAAU,EAAE,IADH;AAETC,IAAAA,WAAW,EAAE,IAFJ;AAGTC,IAAAA,YAAY,EAAE,IAHL;AAITC,IAAAA,UAAU,EAAC;AAJF,GANgB;AAY7BjC,EAAAA,KAAK,EAAC;AACF6B,IAAAA,IAAI,EAAE,CADJ;AAEFK,IAAAA,UAAU,EAAC;AAFT,GAZuB;AAgB7BhC,EAAAA,IAAI,EAAC;AACDyB,IAAAA,KAAK,EAAE,GADN;AAEDC,IAAAA,MAAM,EAAE,GAFP;AAGDM,IAAAA,UAAU,EAAE;AAHX,GAhBwB;AAqB7B/B,EAAAA,UAAU,EAAC;AACPgC,IAAAA,UAAU,EAAC,QADJ;AAEPC,IAAAA,QAAQ,EAACnD,YAAY,CAAC,CAAD,CAFd;AAGPoD,IAAAA,KAAK,EAAC,OAHC;AAIPC,IAAAA,UAAU,EAAC;AAJJ,GArBkB;AA2B7BlC,EAAAA,YAAY,EAAC;AACTmC,IAAAA,aAAa,EAAE,KADN;AAETZ,IAAAA,KAAK,EAAC;AAFG,GA3BgB;AA+B7BtB,EAAAA,WAAW,EAAE;AACTsB,IAAAA,KAAK,EAAC,KADG;AAETM,IAAAA,UAAU,EAAC;AAFF,GA/BgB;AAmC7B1B,EAAAA,WAAW,EAAE;AACT0B,IAAAA,UAAU,EAAC,YADF;AAETN,IAAAA,KAAK,EAAC;AAFG,GAnCgB;AAuC7BrB,EAAAA,YAAY,EAAC;AACT6B,IAAAA,UAAU,EAAC,QADF;AAETE,IAAAA,KAAK,EAAC,OAFG;AAGTD,IAAAA,QAAQ,EAACnD,YAAY,CAAC,CAAD,CAHZ;AAITqD,IAAAA,UAAU,EAAC,MAJF;AAKTP,IAAAA,WAAW,EAAE,IALJ;AAMTC,IAAAA,YAAY,EAAE;AANL,GAvCgB;AA+C7BxB,EAAAA,YAAY,EAAC;AACT2B,IAAAA,UAAU,EAAC,QADF;AAETE,IAAAA,KAAK,EAAC,OAFG;AAGTD,IAAAA,QAAQ,EAACnD,YAAY,CAAC,CAAD,CAHZ;AAITqD,IAAAA,UAAU,EAAC,MAJF;AAKTE,IAAAA,eAAe,EAAC,SALP;AAMTT,IAAAA,WAAW,EAAE,IANJ;AAOTC,IAAAA,YAAY,EAAE,IAPL;AAQTS,IAAAA,YAAY,EAAE;AARL,GA/CgB;AAyD7BhC,EAAAA,IAAI,EAAC;AACD8B,IAAAA,aAAa,EAAE,KADd;AAEDC,IAAAA,eAAe,EAAE,OAFhB;AAGDE,IAAAA,OAAO,EAAE,EAHR;AAIDD,IAAAA,YAAY,EAAE,EAJb;AAKDE,IAAAA,SAAS,EAAE;AALV,GAzDwB;AAgE7BjC,EAAAA,GAAG,EAAC;AACAyB,IAAAA,UAAU,EAAC,QADX;AAEAR,IAAAA,KAAK,EAAC;AAFN,GAhEyB;AAoE7Bd,EAAAA,GAAG,EAAC;AACAsB,IAAAA,UAAU,EAAC,QADX;AAEAR,IAAAA,KAAK,EAAC;AAFN,GApEyB;AAwE7BhB,EAAAA,IAAI,EAAC;AACD6B,IAAAA,eAAe,EAAC,SADf;AAEDP,IAAAA,UAAU,EAAC,QAFV;AAGDW,IAAAA,WAAW,EAAE,KAHZ;AAIDC,IAAAA,UAAU,EAAE,KAJX;AAKDf,IAAAA,UAAU,EAAE,IALX;AAMDgB,IAAAA,aAAa,EAAE,IANd;AAODL,IAAAA,YAAY,EAAE;AAPb,GAxEwB;AAiF7B7B,EAAAA,QAAQ,EAAC;AACLyB,IAAAA,KAAK,EAAC,OADD;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLF,IAAAA,QAAQ,EAACnD,YAAY,CAAC,CAAD;AAHhB,GAjFoB;AAsF7B6B,EAAAA,UAAU,EAAC;AACP0B,IAAAA,eAAe,EAAC,OADT;AAEPb,IAAAA,KAAK,EAAE,MAFA;AAGPC,IAAAA,MAAM,EAAE,MAHD;AAIPe,IAAAA,SAAS,EAAE,IAJJ;AAKPI,IAAAA,oBAAoB,EAAE,EALf;AAMPC,IAAAA,mBAAmB,EAAE,EANd;AAOPN,IAAAA,OAAO,EAAE;AAPF,GAtFkB;AA+F7B3B,EAAAA,QAAQ,EAAC;AACL4B,IAAAA,SAAS,EAAC,IADL;AAELM,IAAAA,WAAW,EAAE,GAFR;AAGLC,IAAAA,WAAW,EAAE,SAHR;AAILT,IAAAA,YAAY,EAAC,EAJR;AAKLb,IAAAA,MAAM,EAAE,MALH;AAMLW,IAAAA,aAAa,EAAC,KANT;AAOLR,IAAAA,WAAW,EAAC,MAPP;AAQLC,IAAAA,YAAY,EAAC,MARR;AASLF,IAAAA,UAAU,EAAC;AATN,GA/FoB;AA0G7Bd,EAAAA,OAAO,EAAC;AACJW,IAAAA,KAAK,EAAC,KADF;AAEJwB,IAAAA,cAAc,EAAE;AAFZ,GA1GqB;AA8G7BlC,EAAAA,MAAM,EAAC;AACHU,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHM,IAAAA,UAAU,EAAE;AAHT,GA9GsB;AAmH7BhB,EAAAA,SAAS,EAAC;AACNS,IAAAA,KAAK,EAAC,KADA;AAENwB,IAAAA,cAAc,EAAE,QAFV;AAGNpB,IAAAA,WAAW,EAAE;AAHP,GAnHmB;AAwH7BZ,EAAAA,OAAO,EAAC;AACJgB,IAAAA,UAAU,EAAE,QADR;AAEJG,IAAAA,UAAU,EAAE,MAFR;AAGJF,IAAAA,QAAQ,EAACnD,YAAY,CAAC,GAAD,CAHjB;AAIJoD,IAAAA,KAAK,EAAE;AAJH,GAxHqB;AA8H7BjB,EAAAA,KAAK,EAAC;AACFO,IAAAA,KAAK,EAAC,KADJ;AAEFM,IAAAA,UAAU,EAAE,UAFV;AAGFkB,IAAAA,cAAc,EAAE;AAHd,GA9HuB;AAmI7B9B,EAAAA,QAAQ,EAAC;AACL8B,IAAAA,cAAc,EAAE,QADX;AAELlB,IAAAA,UAAU,EAAE;AAFP,GAnIoB;AAuI7BX,EAAAA,OAAO,EAAC;AACJa,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,QAAQ,EAACnD,YAAY,CAAC,CAAD,CAFjB;AAGJoD,IAAAA,KAAK,EAAE;AAHH,GAvIqB;AA4I7Bd,EAAAA,SAAS,EAAC;AACN4B,IAAAA,cAAc,EAAE;AADV,GA5ImB;AA+I7B3B,EAAAA,OAAO,EAAC;AACJW,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,QAAQ,EAACnD,YAAY,CAAC,GAAD,CAFjB;AAGJoD,IAAAA,KAAK,EAAE;AAHH;AA/IqB,CAAlB,CAAf;AAqJA,eAAenD,OAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { ImageBackground,StyleSheet, Text, View,TouchableOpacity, Image,Button , Alert } from 'react-native'\r\nimport { generateMnemonic, mnemonicToSeed, createAccount, getBalance, getToken,sendTokenTransaction } from '../../api';\r\nimport { RFPercentage, RFValue } from \"react-native-responsive-fontsize\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Pressable, Hoverable, ScrollView } from \"react-native-web-hover\";\r\nimport { TextInput } from 'react-native-element-textinput';\r\n\r\nconst Balance = () => {\r\n\r\n    //Funcion obtener balance\r\n    const [balance, setBalance] = useState(0)\r\n\r\n    async function obtenerBalance(publicKey: string) {\r\n        getBalance(publicKey).then((value) => {\r\n        console.log(value)\r\n        setBalance(value)\r\n        }).catch((error) => {\r\n        console.log(error);\r\n        return \"error\"\r\n        })\r\n    }\r\n\r\n    //obtener balance de una llave publica\r\n    obtenerBalance(\"uja3w9XG1g6DQSVT6YASK99FVmdVwXoHVoQEgtEJdLv\")\r\n\r\n    //value textinput\r\n\r\n\r\n    return (\r\n        <View style={styles.body}>\r\n            <ImageBackground source={require('./img/fondo.png')} style={styles.fondo} >\r\n                <View style={styles.containeruno}>\r\n                    <Image style={styles.logo} source={require('./img/logoblanco.png')}  />\r\n                    {/* Balance */}\r\n                    <Text style={styles.txtbalance}>$ {balance}...</Text>\r\n                    {/* Balance inferior */}\r\n                    <View style={styles.doscolumnasB} >\r\n                        <View style={styles.columnaunoB}>\r\n                            <Text style={styles.txtinferiorL}>+0.00</Text>\r\n                        </View>\r\n                        <View style={styles.columnadosB}>\r\n                            <Text style={styles.txtinferiorR}>0%</Text>\r\n                        </View>\r\n                    </View>\r\n                    {/* Enviar y recibir */}\r\n                    <View style={styles.dcER}>\r\n                        <View style={styles.dcR}>\r\n                            <TouchableOpacity style={styles.btnR}  activeOpacity={0.9}>\r\n                                <Text style={styles.textbtnR}>RECIBIR</Text> \r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <View style={styles.dcE}>\r\n                            <TouchableOpacity style={styles.btnR} activeOpacity={0.9}>\r\n                                <Text style={styles.textbtnR}>ENVIAR</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    {/* Balance cryptos */}\r\n                    <View style={styles.balancecry}>\r\n                        <View style={styles.tablacry} >\r\n                            <View style={styles.logocry}>\r\n                                <Image style={styles.imgcry} source={require('./img/billeteras/logocondor.png')}  />\r\n                            </View>\r\n                            <View style={styles.nombrecry}>\r\n                                <Text style={styles.ntxtcry}>CONDORCOIN</Text>\r\n                            </View>\r\n                            <View style={styles.smcry}>\r\n                                <View style={styles.saldocry}>\r\n                                    <Text style={styles.stxtcry}>1000</Text>\r\n                                </View>\r\n                                <View style={styles.monedacry}>\r\n                                    <Text style={styles.mtxtcry}>CNDR</Text>\r\n                                </View>\r\n                            </View>                           \r\n                        </View>\r\n                        \r\n\r\n                        <View style={styles.tablacry} >\r\n                            <View style={styles.logocry}>\r\n                                <Image style={styles.imgcry} source={require('./img/billeteras/solana.png')}  />\r\n                            </View>\r\n                            <View style={styles.nombrecry}>\r\n                                <Text style={styles.ntxtcry}>SOLANA</Text>\r\n                            </View>\r\n                            <View style={styles.smcry}>\r\n                                <View style={styles.saldocry}>\r\n                                    <Text style={styles.stxtcry}>2000</Text>\r\n                                </View>\r\n                                <View style={styles.monedacry}>\r\n                                    <Text style={styles.mtxtcry}>SOL</Text>\r\n                                </View>\r\n                            </View>                           \r\n                        </View>\r\n                    </View>\r\n                </View>             \r\n            </ImageBackground>   \r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n        width: '100%',\r\n        height: '100%',\r\n        flex: 1,\r\n    },\r\n    containeruno:{\r\n        paddingTop: '8%',\r\n        paddingLeft: '5%',\r\n        paddingRight: '4%',\r\n        alignItems:'center',\r\n    },\r\n    fondo:{\r\n        flex: 1,\r\n        resizeMode:'contain',\r\n    },\r\n    logo:{\r\n        width: 180,\r\n        height: 180,\r\n        resizeMode: 'contain',\r\n    },\r\n    txtbalance:{\r\n        fontFamily:'Roboto',\r\n        fontSize:RFPercentage(5),\r\n        color:'white',\r\n        fontWeight:'bold',\r\n    },\r\n    doscolumnasB:{\r\n        flexDirection: 'row',\r\n        width:'100%',\r\n    },\r\n    columnaunoB: {\r\n        width:'50%',\r\n        alignItems:'flex-end',\r\n    },\r\n    columnadosB: {\r\n        alignItems:'flex-start',\r\n        width:'50%',\r\n    },\r\n    txtinferiorL:{\r\n        fontFamily:'Roboto',\r\n        color:'white',\r\n        fontSize:RFPercentage(3),\r\n        fontWeight:'bold',\r\n        paddingLeft: '3%',\r\n        paddingRight: '3%',\r\n    },\r\n    txtinferiorR:{\r\n        fontFamily:'Roboto',\r\n        color:'white',\r\n        fontSize:RFPercentage(3),\r\n        fontWeight:'bold',\r\n        backgroundColor:'#923085',\r\n        paddingLeft: '3%',\r\n        paddingRight: '3%',\r\n        borderRadius: 10,\r\n    },\r\n    dcER:{\r\n        flexDirection: 'row',\r\n        backgroundColor: 'white',\r\n        padding: 20,\r\n        borderRadius: 10,\r\n        marginTop: '5%',\r\n    },\r\n    dcR:{\r\n        fontFamily:'Roboto',\r\n        width:'50%',\r\n    },\r\n    dcE:{\r\n        fontFamily:'Roboto',\r\n        width:'50%',\r\n    },\r\n    btnR:{\r\n        backgroundColor:'#5b298a',\r\n        alignItems:'center',\r\n        marginRight: '10%',\r\n        marginLeft: '10%',\r\n        paddingTop: '8%',\r\n        paddingBottom: '8%',\r\n        borderRadius: 20,\r\n    },\r\n    textbtnR:{\r\n        color:'white',\r\n        fontWeight: 'bold',\r\n        fontSize:RFPercentage(2),\r\n    },\r\n    balancecry:{\r\n        backgroundColor:'white',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: '3%',\r\n        borderTopRightRadius: 20,\r\n        borderTopLeftRadius: 20,\r\n        padding: '2%',\r\n    },\r\n    tablacry:{\r\n        marginTop:'4%',\r\n        borderWidth: 0.8,\r\n        borderColor: '#e0e0e0',\r\n        borderRadius:10,\r\n        height: '5.8%',\r\n        flexDirection:'row',\r\n        paddingLeft:'2.5%',\r\n        paddingRight:'3.5%',\r\n        paddingTop:'0%'\r\n    },\r\n    logocry:{\r\n        width:'15%',\r\n        justifyContent: 'center',\r\n    },\r\n    imgcry:{\r\n        width: 50,\r\n        height: 50,\r\n        resizeMode: 'contain',\r\n    },\r\n    nombrecry:{\r\n        width:'45%',\r\n        justifyContent: 'center',\r\n        paddingLeft: '2%'\r\n    },\r\n    ntxtcry:{\r\n        fontFamily: 'Roboto',\r\n        fontWeight: 'bold',\r\n        fontSize:RFPercentage(2.3),\r\n        color: '#8d8c8c',\r\n    },\r\n    smcry:{\r\n        width:'40%',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'center',\r\n    },\r\n    saldocry:{\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-end',\r\n    },\r\n    stxtcry:{\r\n        fontFamily: 'Roboto',\r\n        fontSize:RFPercentage(3),\r\n        color: '#8d8c8c',\r\n    },\r\n    monedacry:{\r\n        justifyContent: 'center',\r\n    },\r\n    mtxtcry:{\r\n        fontFamily: 'Roboto',\r\n        fontSize:RFPercentage(1.8),\r\n        color: '#8d8c8c',\r\n    },\r\n})\r\nexport default Balance"]},"metadata":{},"sourceType":"module"}