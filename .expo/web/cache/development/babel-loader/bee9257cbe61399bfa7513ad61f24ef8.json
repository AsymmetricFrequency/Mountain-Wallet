{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { URL as whatwgUrl } from 'whatwg-url-without-unicode';\nvar BLOB_URL_PREFIX = null;\nvar BlobModule = NativeModules.BlobModule;\n\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += \"//\" + BlobModule.BLOB_URI_HOST + \"/\";\n  }\n}\n\nwhatwgUrl.createObjectURL = function createObjectURL(blob) {\n  if (BLOB_URL_PREFIX === null) {\n    throw new Error('Cannot create URL for blob!');\n  }\n\n  return \"\" + BLOB_URL_PREFIX + blob.data.blobId + \"?offset=\" + blob.data.offset + \"&size=\" + blob.size;\n};\n\nwhatwgUrl.revokeObjectURL = function revokeObjectURL(url) {};\n\nexport var URL = whatwgUrl;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Proyectos/WalletRN/backup/Mountain-Walletdos/node_modules/react-native-url-polyfill/js/URL.js"],"names":["URL","whatwgUrl","BLOB_URL_PREFIX","BlobModule","NativeModules","BLOB_URI_SCHEME","BLOB_URI_HOST","createObjectURL","blob","Error","data","blobId","offset","size","revokeObjectURL","url"],"mappings":";AACA,SAAQA,GAAG,IAAIC,SAAf,QAA+B,4BAA/B;AAEA,IAAIC,eAAe,GAAG,IAAtB;AAEA,IAAOC,UAAP,GAAqBC,aAArB,CAAOD,UAAP;;AAEA,IAAIA,UAAU,IAAI,OAAOA,UAAU,CAACE,eAAlB,KAAsC,QAAxD,EAAkE;AAChEH,EAAAA,eAAe,GAAGC,UAAU,CAACE,eAAX,GAA6B,GAA/C;;AACA,MAAI,OAAOF,UAAU,CAACG,aAAlB,KAAoC,QAAxC,EAAkD;AAChDJ,IAAAA,eAAe,WAASC,UAAU,CAACG,aAApB,MAAf;AACD;AACF;;AA2BDL,SAAS,CAACM,eAAV,GAA4B,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACzD,MAAIN,eAAe,KAAK,IAAxB,EAA8B;AAC5B,UAAM,IAAIO,KAAJ,CAAU,6BAAV,CAAN;AACD;;AACD,cAAUP,eAAV,GAA4BM,IAAI,CAACE,IAAL,CAAUC,MAAtC,gBAAuDH,IAAI,CAACE,IAAL,CAAUE,MAAjE,cAAgFJ,IAAI,CAACK,IAArF;AACD,CALD;;AAOAZ,SAAS,CAACa,eAAV,GAA4B,SAASA,eAAT,CAAyBC,GAAzB,EAA8B,CAEzD,CAFD;;AAIA,OAAO,IAAMf,GAAG,GAAGC,SAAZ","sourcesContent":["import {NativeModules} from 'react-native';\r\nimport {URL as whatwgUrl} from 'whatwg-url-without-unicode';\r\n\r\nlet BLOB_URL_PREFIX = null;\r\n\r\nconst {BlobModule} = NativeModules;\r\n\r\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\r\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\r\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\r\n    BLOB_URL_PREFIX += `//${BlobModule.BLOB_URI_HOST}/`;\r\n  }\r\n}\r\n\r\n/**\r\n * To allow Blobs be accessed via `content://` URIs,\r\n * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\r\n *\r\n * ```xml\r\n * <manifest>\r\n *   <application>\r\n *     <provider\r\n *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\r\n *       android:authorities=\"@string/blob_provider_authority\"\r\n *       android:exported=\"false\"\r\n *     />\r\n *   </application>\r\n * </manifest>\r\n * ```\r\n * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\r\n * Use a dotted name that's entirely unique to your app:\r\n *\r\n * ```xml\r\n * <resources>\r\n *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\r\n * </resources>\r\n * ```\r\n */\r\n\r\nwhatwgUrl.createObjectURL = function createObjectURL(blob) {\r\n  if (BLOB_URL_PREFIX === null) {\r\n    throw new Error('Cannot create URL for blob!');\r\n  }\r\n  return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;\r\n};\r\n\r\nwhatwgUrl.revokeObjectURL = function revokeObjectURL(url) {\r\n  // Do nothing.\r\n};\r\n\r\nexport const URL = whatwgUrl;\r\n"]},"metadata":{},"sourceType":"module"}