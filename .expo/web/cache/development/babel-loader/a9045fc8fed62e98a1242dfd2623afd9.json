{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport React, { useState } from 'react';\nimport { styles } from \"../theme/appTheme\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { useTheme } from 'react-native-paper';\nvar altura = Platform.OS === \"ios\" ? 22 : 25;\n\nvar Edituser = function Edituser(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(Appearance.getColorScheme()),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  Appearance.addChangeListener(function (scheme) {\n    setTheme(scheme.colorScheme);\n  });\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(SafeAreaView, {\n    style: [styles.body, {\n      backgroundColor: colors.background\n    }]\n  }, React.createElement(StatusBar, {\n    backgroundColor: colors.background,\n    barStyle: theme === 'dark' ? \"light-content\" : \"dark-content\"\n  }), React.createElement(KeyboardAwareScrollView, {\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    contentContainerStyle: [styles.completo, {\n      backgroundColor: colors.background\n    }],\n    scrollEnabled: false\n  }, React.createElement(View, {\n    style: styles.titlecc\n  }, React.createElement(Text, {\n    style: [styles.titlex, {\n      left: 20,\n      color: colors.text\n    }]\n  }, \"Cambiar nombre de usuario\")), React.createElement(View, {\n    style: styles.cajaatras\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.btndo,\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: altura,\n    color: \"#440577\"\n  }))), React.createElement(View, {\n    style: [styles.cajauser, {\n      borderColor: colors.text\n    }]\n  }, React.createElement(TextInput, {\n    style: [styles.inputuser, {\n      color: colors.text\n    }],\n    autoFocus: true\n  })), React.createElement(View, {\n    style: styles.cajabtneuser\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.btnDone, {\n      backgroundColor: colors.text\n    }],\n    activeOpacity: 0.5\n  }, React.createElement(Text, {\n    style: [styles.txtDone, {\n      color: colors.background\n    }]\n  }, \"Continuar\")))));\n};\n\nexport default Edituser;","map":{"version":3,"sources":["/home/m/Desktop/Mountain-Wallet/src/screens/Edituser.tsx"],"names":["React","useState","styles","Icon","TextInput","KeyboardAwareScrollView","useTheme","altura","Platform","OS","Edituser","navigation","Appearance","getColorScheme","theme","setTheme","addChangeListener","scheme","colorScheme","colors","body","backgroundColor","background","x","y","completo","titlecc","titlex","left","color","text","cajaatras","btndo","goBack","cajauser","borderColor","inputuser","cajabtneuser","btnDone","txtDone"],"mappings":"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","sourcesContent":["import { View, Text, SafeAreaView, StatusBar, TouchableOpacity, Platform, Appearance } from 'react-native';\nimport React, { useState } from 'react';\nimport { styles } from \"../theme/appTheme\";\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { useTheme } from 'react-native-paper';\n\nconst altura = Platform.OS === \"ios\" ? 22 : 25;\n\n\nconst Edituser = ({ navigation }: { navigation: any }) => {\n  //Detecta el modo del sistema\n  const [theme,setTheme] = useState(Appearance.getColorScheme());\n  Appearance.addChangeListener((scheme)=>{\n    setTheme(scheme.colorScheme);\n  })\n  const { colors } = useTheme();\n  \n  return (\n    <SafeAreaView style={[styles.body,{backgroundColor:colors.background}]}>\n        <StatusBar \n          backgroundColor= {colors.background}\n          barStyle={theme === 'dark' ?  \"light-content\" : \"dark-content\"} \n        />\n        <KeyboardAwareScrollView\n          resetScrollToCoords={{ x: 0, y: 0 }}\n          contentContainerStyle={[styles.completo,{backgroundColor:colors.background}]}\n          scrollEnabled={false}\n        >\n            <View style={styles.titlecc}>\n            <Text style={[styles.titlex,{left:20,color:colors.text}]}>Cambiar nombre de usuario</Text>\n            </View>\n            <View style={styles.cajaatras}>\n            <TouchableOpacity\n                activeOpacity={0.5}\n                style={styles.btndo}\n                onPress={() => navigation.goBack()}\n            >\n                <Icon name=\"arrow-left\" size={altura} color=\"#440577\" />\n            </TouchableOpacity>\n            </View>\n            <View style={[styles.cajauser,{borderColor:colors.text}]}>\n              <TextInput style={[styles.inputuser,{color:colors.text}]} autoFocus={true}>\n                \n              </TextInput>\n            </View>\n            <View style={styles.cajabtneuser}>\n              <TouchableOpacity\n                style={[styles.btnDone,{ backgroundColor:colors.text}]}\n                activeOpacity={0.5}\n              >\n                <Text style={[styles.txtDone,{color:colors.background}]}>Continuar</Text>\n              </TouchableOpacity>\n            </View>\n        </KeyboardAwareScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default Edituser;\n"]},"metadata":{},"sourceType":"module"}